// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NotificationDTO NotificationDTO
//
// swagger:model NotificationDTO
type NotificationDTO struct {

	// access properties
	AccessProperties map[string]string `json:"accessProperties,omitempty"`

	// category
	Category string `json:"category,omitempty"`

	// created on
	CreatedOn int64 `json:"createdOn,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// last updated on
	LastUpdatedOn int64 `json:"lastUpdatedOn,omitempty"`

	// level
	Level string `json:"level,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// notification key
	NotificationKey string `json:"notificationKey,omitempty"`

	// properties
	Properties map[string]string `json:"properties,omitempty"`

	// redirect Url
	RedirectURL string `json:"redirectUrl,omitempty"`

	// short description
	ShortDescription string `json:"shortDescription,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// state
	// Enum: [CREATED READ DELETED ARCHIVED]
	State string `json:"state,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// vmid
	Vmid string `json:"vmid,omitempty"`
}

// Validate validates this notification d t o
func (m *NotificationDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var notificationDTOTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATED","READ","DELETED","ARCHIVED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		notificationDTOTypeStatePropEnum = append(notificationDTOTypeStatePropEnum, v)
	}
}

const (

	// NotificationDTOStateCREATED captures enum value "CREATED"
	NotificationDTOStateCREATED string = "CREATED"

	// NotificationDTOStateREAD captures enum value "READ"
	NotificationDTOStateREAD string = "READ"

	// NotificationDTOStateDELETED captures enum value "DELETED"
	NotificationDTOStateDELETED string = "DELETED"

	// NotificationDTOStateARCHIVED captures enum value "ARCHIVED"
	NotificationDTOStateARCHIVED string = "ARCHIVED"
)

// prop value enum
func (m *NotificationDTO) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, notificationDTOTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NotificationDTO) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NotificationDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NotificationDTO) UnmarshalBinary(b []byte) error {
	var res NotificationDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
