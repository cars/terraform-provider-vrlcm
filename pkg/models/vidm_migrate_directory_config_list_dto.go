// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VidmMigrateDirectoryConfigListDTO VidmMigrateDirectoryConfigListDTO
//
// swagger:model VidmMigrateDirectoryConfigListDTO
type VidmMigrateDirectoryConfigListDTO struct {

	// base tenant hostname
	BaseTenantHostname string `json:"baseTenantHostname,omitempty"`

	// is tenant configured by path
	IsTenantConfiguredByPath bool `json:"isTenantConfiguredByPath,omitempty"`

	// request Id
	RequestID string `json:"requestId,omitempty"`

	// tenant hostname
	TenantHostname string `json:"tenantHostname,omitempty"`

	// use service client
	UseServiceClient bool `json:"useServiceClient,omitempty"`

	// vidm admin password
	VidmAdminPassword string `json:"vidmAdminPassword,omitempty"`

	// vidm admin user
	VidmAdminUser string `json:"vidmAdminUser,omitempty"`

	// vidm directory config list d t o
	VidmDirectoryConfigListDTO *VidmDirectoryConfigListDTO `json:"vidmDirectoryConfigListDTO,omitempty"`

	// vidm domain name
	VidmDomainName string `json:"vidmDomainName,omitempty"`

	// vidm host
	VidmHost string `json:"vidmHost,omitempty"`

	// vidm o auth service client Id
	VidmOAuthServiceClientID string `json:"vidmOAuthServiceClientId,omitempty"`

	// vidm o auth service client secret
	VidmOAuthServiceClientSecret string `json:"vidmOAuthServiceClientSecret,omitempty"`

	// vidm tenant
	VidmTenant string `json:"vidmTenant,omitempty"`
}

// Validate validates this vidm migrate directory config list d t o
func (m *VidmMigrateDirectoryConfigListDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVidmDirectoryConfigListDTO(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VidmMigrateDirectoryConfigListDTO) validateVidmDirectoryConfigListDTO(formats strfmt.Registry) error {

	if swag.IsZero(m.VidmDirectoryConfigListDTO) { // not required
		return nil
	}

	if m.VidmDirectoryConfigListDTO != nil {
		if err := m.VidmDirectoryConfigListDTO.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vidmDirectoryConfigListDTO")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VidmMigrateDirectoryConfigListDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VidmMigrateDirectoryConfigListDTO) UnmarshalBinary(b []byte) error {
	var res VidmMigrateDirectoryConfigListDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
