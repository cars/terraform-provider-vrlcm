// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProductPolicyDetailDTO ProductPolicyDetailDTO
//
// swagger:model ProductPolicyDetailDTO
type ProductPolicyDetailDTO struct {

	// description
	Description string `json:"description,omitempty"`

	// details href
	DetailsHref string `json:"detailsHref,omitempty"`

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`

	// icon src
	IconSrc string `json:"iconSrc,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// product versions
	ProductVersions []*ProductVersion `json:"productVersions"`

	// properties
	Properties map[string]string `json:"properties,omitempty"`

	// sizes
	Sizes map[string][]string `json:"sizes,omitempty"`

	// vmid
	Vmid string `json:"vmid,omitempty"`
}

// Validate validates this product policy detail d t o
func (m *ProductPolicyDetailDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProductVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductPolicyDetailDTO) validateProductVersions(formats strfmt.Registry) error {

	if swag.IsZero(m.ProductVersions) { // not required
		return nil
	}

	for i := 0; i < len(m.ProductVersions); i++ {
		if swag.IsZero(m.ProductVersions[i]) { // not required
			continue
		}

		if m.ProductVersions[i] != nil {
			if err := m.ProductVersions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("productVersions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProductPolicyDetailDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductPolicyDetailDTO) UnmarshalBinary(b []byte) error {
	var res ProductPolicyDetailDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
