// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SyncProfileUserDTO SyncProfileUserDTO
//
// swagger:model SyncProfileUserDTO
type SyncProfileUserDTO struct {

	// identity user info
	IdentityUserInfo map[string]ADIdentityUserInfoDTO `json:"identityUserInfo,omitempty"`

	// user filters
	UserFilters []*UserFiltersDTO `json:"userFilters"`
}

// Validate validates this sync profile user d t o
func (m *SyncProfileUserDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdentityUserInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserFilters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SyncProfileUserDTO) validateIdentityUserInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.IdentityUserInfo) { // not required
		return nil
	}

	for k := range m.IdentityUserInfo {

		if err := validate.Required("identityUserInfo"+"."+k, "body", m.IdentityUserInfo[k]); err != nil {
			return err
		}
		if val, ok := m.IdentityUserInfo[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *SyncProfileUserDTO) validateUserFilters(formats strfmt.Registry) error {

	if swag.IsZero(m.UserFilters) { // not required
		return nil
	}

	for i := 0; i < len(m.UserFilters); i++ {
		if swag.IsZero(m.UserFilters[i]) { // not required
			continue
		}

		if m.UserFilters[i] != nil {
			if err := m.UserFilters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("userFilters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SyncProfileUserDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncProfileUserDTO) UnmarshalBinary(b []byte) error {
	var res SyncProfileUserDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
