// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VraEndpointCreationDTO VraEndpointCreationDTO
//
// swagger:model VraEndpointCreationDTO
type VraEndpointCreationDTO struct {

	// cafe lb host name
	CafeLbHostName string `json:"cafeLbHostName,omitempty"`

	// nsx endpoint host name
	NsxEndpointHostName string `json:"nsxEndpointHostName,omitempty"`

	// nsx endpoint password
	NsxEndpointPassword string `json:"nsxEndpointPassword,omitempty"`

	// nsx endpoint type
	NsxEndpointType string `json:"nsxEndpointType,omitempty"`

	// nsx endpoint username
	NsxEndpointUsername string `json:"nsxEndpointUsername,omitempty"`

	// tenant user name
	TenantUserName string `json:"tenantUserName,omitempty"`

	// tenant user password
	TenantUserPassword string `json:"tenantUserPassword,omitempty"`

	// version
	Version string `json:"version,omitempty"`

	// vsphere endpoint host name
	VsphereEndpointHostName string `json:"vsphereEndpointHostName,omitempty"`

	// vsphere endpoint name
	VsphereEndpointName string `json:"vsphereEndpointName,omitempty"`

	// vsphere endpoint password
	VsphereEndpointPassword string `json:"vsphereEndpointPassword,omitempty"`

	// vsphere endpoint region ids
	VsphereEndpointRegionIds []string `json:"vsphereEndpointRegionIds"`

	// vsphere endpoint username
	VsphereEndpointUsername string `json:"vsphereEndpointUsername,omitempty"`
}

// Validate validates this vra endpoint creation d t o
func (m *VraEndpointCreationDTO) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VraEndpointCreationDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VraEndpointCreationDTO) UnmarshalBinary(b []byte) error {
	var res VraEndpointCreationDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
