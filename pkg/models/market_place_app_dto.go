// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MarketPlaceAppDTO MarketPlaceAppDTO
//
// swagger:model MarketPlaceAppDTO
type MarketPlaceAppDTO struct {

	// app history details
	AppHistoryDetails []*MarketPlaceAppHistory `json:"appHistoryDetails"`

	// avg rating
	AvgRating float32 `json:"avgRating,omitempty"`

	// category i ds
	CategoryIDs []string `json:"categoryIDs"`

	// category map
	CategoryMap map[string]string `json:"categoryMap,omitempty"`

	// child Id
	ChildID string `json:"childId,omitempty"`

	// content type
	ContentType string `json:"contentType,omitempty"`

	// created
	// Format: date-time
	Created strfmt.DateTime `json:"created,omitempty"`

	// deleted by user
	DeletedByUser bool `json:"deletedByUser,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// download u r ls
	DownloadURLs []string `json:"downloadURLs"`

	// downloaded
	Downloaded bool `json:"downloaded,omitempty"`

	// downloaded by
	DownloadedBy string `json:"downloadedBy,omitempty"`

	// downloaded date
	DownloadedDate string `json:"downloadedDate,omitempty"`

	// entitlement level
	EntitlementLevel string `json:"entitlementLevel,omitempty"`

	// eula
	Eula string `json:"eula,omitempty"`

	// external link
	ExternalLink string `json:"externalLink,omitempty"`

	// featured
	Featured bool `json:"featured,omitempty"`

	// file name
	FileName string `json:"fileName,omitempty"`

	// file path of downloaded app
	FilePathOfDownloadedApp string `json:"filePathOfDownloadedApp,omitempty"`

	// file sha256 sum
	FileSha256Sum string `json:"fileSha256Sum,omitempty"`

	// file size
	FileSize int64 `json:"fileSize,omitempty"`

	// highlight1
	Highlight1 string `json:"highlight1,omitempty"`

	// highlight2
	Highlight2 string `json:"highlight2,omitempty"`

	// highlight3
	Highlight3 string `json:"highlight3,omitempty"`

	// icon
	Icon string `json:"icon,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is deleted by user
	IsDeletedByUser bool `json:"isDeletedByUser,omitempty"`

	// is downloaded
	IsDownloaded bool `json:"isDownloaded,omitempty"`

	// is featured
	IsFeatured bool `json:"isFeatured,omitempty"`

	// is latest version available
	IsLatestVersionAvailable bool `json:"isLatestVersionAvailable,omitempty"`

	// is removed
	IsRemoved bool `json:"isRemoved,omitempty"`

	// last updated
	// Format: date-time
	LastUpdated strfmt.DateTime `json:"lastUpdated,omitempty"`

	// latest version available
	LatestVersionAvailable bool `json:"latestVersionAvailable,omitempty"`

	// license type
	LicenseType string `json:"licenseType,omitempty"`

	// num installs
	NumInstalls int32 `json:"numInstalls,omitempty"`

	// num reviews
	NumReviews int32 `json:"numReviews,omitempty"`

	// num views
	NumViews int32 `json:"numViews,omitempty"`

	// overview
	Overview string `json:"overview,omitempty"`

	// parent Id
	ParentID string `json:"parentId,omitempty"`

	// partner
	Partner string `json:"partner,omitempty"`

	// partner slug
	PartnerSlug string `json:"partnerSlug,omitempty"`

	// product and version
	ProductAndVersion []string `json:"productAndVersion"`

	// product display name
	ProductDisplayName string `json:"productDisplayName,omitempty"`

	// product short name
	ProductShortName string `json:"productShortName,omitempty"`

	// products
	Products []*MarketPlaceAppProduct `json:"products"`

	// published
	// Format: date-time
	Published strfmt.DateTime `json:"published,omitempty"`

	// related content
	RelatedContent []string `json:"relatedContent"`

	// removed
	Removed bool `json:"removed,omitempty"`

	// requires login
	RequiresLogin bool `json:"requiresLogin,omitempty"`

	// reviews
	Reviews []string `json:"reviews"`

	// short name
	ShortName string `json:"shortName,omitempty"`

	// show notification
	ShowNotification bool `json:"showNotification,omitempty"`

	// slug
	Slug string `json:"slug,omitempty"`

	// solution i ds
	SolutionIDs []string `json:"solutionIDs"`

	// solutions map
	SolutionsMap map[string]string `json:"solutionsMap,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// support email
	SupportEmail string `json:"supportEmail,omitempty"`

	// support hours
	SupportHours string `json:"supportHours,omitempty"`

	// support phone
	SupportPhone string `json:"supportPhone,omitempty"`

	// support statement
	SupportStatement string `json:"supportStatement,omitempty"`

	// support Url
	SupportURL string `json:"supportUrl,omitempty"`

	// tech specs
	TechSpecs string `json:"techSpecs,omitempty"`

	// transaction Id
	TransactionID string `json:"transactionId,omitempty"`

	// trial Url
	TrialURL string `json:"trialUrl,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`

	// vcg Url
	VcgURL string `json:"vcgUrl,omitempty"`

	// version
	Version string `json:"version,omitempty"`

	// version update details
	VersionUpdateDetails []string `json:"versionUpdateDetails"`

	// video Url
	VideoURL string `json:"videoUrl,omitempty"`

	// vmid
	Vmid string `json:"vmid,omitempty"`

	// vmware certified
	VmwareCertified string `json:"vmwareCertified,omitempty"`
}

// Validate validates this market place app d t o
func (m *MarketPlaceAppDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppHistoryDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePublished(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MarketPlaceAppDTO) validateAppHistoryDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.AppHistoryDetails) { // not required
		return nil
	}

	for i := 0; i < len(m.AppHistoryDetails); i++ {
		if swag.IsZero(m.AppHistoryDetails[i]) { // not required
			continue
		}

		if m.AppHistoryDetails[i] != nil {
			if err := m.AppHistoryDetails[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("appHistoryDetails" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *MarketPlaceAppDTO) validateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.Created) { // not required
		return nil
	}

	if err := validate.FormatOf("created", "body", "date-time", m.Created.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MarketPlaceAppDTO) validateLastUpdated(formats strfmt.Registry) error {

	if swag.IsZero(m.LastUpdated) { // not required
		return nil
	}

	if err := validate.FormatOf("lastUpdated", "body", "date-time", m.LastUpdated.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MarketPlaceAppDTO) validateProducts(formats strfmt.Registry) error {

	if swag.IsZero(m.Products) { // not required
		return nil
	}

	for i := 0; i < len(m.Products); i++ {
		if swag.IsZero(m.Products[i]) { // not required
			continue
		}

		if m.Products[i] != nil {
			if err := m.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *MarketPlaceAppDTO) validatePublished(formats strfmt.Registry) error {

	if swag.IsZero(m.Published) { // not required
		return nil
	}

	if err := validate.FormatOf("published", "body", "date-time", m.Published.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MarketPlaceAppDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MarketPlaceAppDTO) UnmarshalBinary(b []byte) error {
	var res MarketPlaceAppDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
