// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RequestDefinitionDTO RequestDefinitionDTO
//
// swagger:model RequestDefinitionDTO
type RequestDefinitionDTO struct {

	// execution planner
	ExecutionPlanner string `json:"executionPlanner,omitempty"`

	// execution type
	ExecutionType string `json:"executionType,omitempty"`

	// inputs list
	InputsList []*ParameterDefinitionDTO `json:"inputsList"`

	// name
	Name string `json:"name,omitempty"`

	// outputs list
	OutputsList []*ParameterDefinitionDTO `json:"outputsList"`

	// owner plugin
	OwnerPlugin string `json:"ownerPlugin,omitempty"`

	// post processor
	PostProcessor string `json:"postProcessor,omitempty"`

	// pre processor
	PreProcessor string `json:"preProcessor,omitempty"`

	// transaction Id
	TransactionID string `json:"transactionId,omitempty"`

	// vmid
	Vmid string `json:"vmid,omitempty"`
}

// Validate validates this request definition d t o
func (m *RequestDefinitionDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInputsList(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOutputsList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RequestDefinitionDTO) validateInputsList(formats strfmt.Registry) error {

	if swag.IsZero(m.InputsList) { // not required
		return nil
	}

	for i := 0; i < len(m.InputsList); i++ {
		if swag.IsZero(m.InputsList[i]) { // not required
			continue
		}

		if m.InputsList[i] != nil {
			if err := m.InputsList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("inputsList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RequestDefinitionDTO) validateOutputsList(formats strfmt.Registry) error {

	if swag.IsZero(m.OutputsList) { // not required
		return nil
	}

	for i := 0; i < len(m.OutputsList); i++ {
		if swag.IsZero(m.OutputsList[i]) { // not required
			continue
		}

		if m.OutputsList[i] != nil {
			if err := m.OutputsList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("outputsList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RequestDefinitionDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RequestDefinitionDTO) UnmarshalBinary(b []byte) error {
	var res RequestDefinitionDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
