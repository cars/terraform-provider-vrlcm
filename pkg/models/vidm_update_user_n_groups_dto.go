// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VidmUpdateUserNGroupsDTO VidmUpdateUserNGroupsDTO
//
// swagger:model VidmUpdateUserNGroupsDTO
type VidmUpdateUserNGroupsDTO struct {

	// directory config Id
	DirectoryConfigID string `json:"directoryConfigId,omitempty"`

	// sync profile group
	SyncProfileGroup *SyncProfileGroupDTO `json:"syncProfileGroup,omitempty"`

	// sync profile user
	SyncProfileUser *SyncProfileUserDTO `json:"syncProfileUser,omitempty"`

	// trigger dryrun
	TriggerDryrun bool `json:"triggerDryrun,omitempty"`

	// vidm admin password
	VidmAdminPassword string `json:"vidmAdminPassword,omitempty"`

	// vidm admin user
	VidmAdminUser string `json:"vidmAdminUser,omitempty"`

	// vidm host
	VidmHost string `json:"vidmHost,omitempty"`

	// vidm tenant
	VidmTenant string `json:"vidmTenant,omitempty"`
}

// Validate validates this vidm update user n groups d t o
func (m *VidmUpdateUserNGroupsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSyncProfileGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSyncProfileUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VidmUpdateUserNGroupsDTO) validateSyncProfileGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.SyncProfileGroup) { // not required
		return nil
	}

	if m.SyncProfileGroup != nil {
		if err := m.SyncProfileGroup.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("syncProfileGroup")
			}
			return err
		}
	}

	return nil
}

func (m *VidmUpdateUserNGroupsDTO) validateSyncProfileUser(formats strfmt.Registry) error {

	if swag.IsZero(m.SyncProfileUser) { // not required
		return nil
	}

	if m.SyncProfileUser != nil {
		if err := m.SyncProfileUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("syncProfileUser")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VidmUpdateUserNGroupsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VidmUpdateUserNGroupsDTO) UnmarshalBinary(b []byte) error {
	var res VidmUpdateUserNGroupsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
