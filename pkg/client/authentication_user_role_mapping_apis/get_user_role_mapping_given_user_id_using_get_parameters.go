// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_role_mapping_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUserRoleMappingGivenUserIDUsingGETParams creates a new GetUserRoleMappingGivenUserIDUsingGETParams object
// with the default values initialized.
func NewGetUserRoleMappingGivenUserIDUsingGETParams() *GetUserRoleMappingGivenUserIDUsingGETParams {
	var ()
	return &GetUserRoleMappingGivenUserIDUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetUserRoleMappingGivenUserIDUsingGETParamsWithTimeout creates a new GetUserRoleMappingGivenUserIDUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetUserRoleMappingGivenUserIDUsingGETParamsWithTimeout(timeout time.Duration) *GetUserRoleMappingGivenUserIDUsingGETParams {
	var ()
	return &GetUserRoleMappingGivenUserIDUsingGETParams{

		timeout: timeout,
	}
}

// NewGetUserRoleMappingGivenUserIDUsingGETParamsWithContext creates a new GetUserRoleMappingGivenUserIDUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetUserRoleMappingGivenUserIDUsingGETParamsWithContext(ctx context.Context) *GetUserRoleMappingGivenUserIDUsingGETParams {
	var ()
	return &GetUserRoleMappingGivenUserIDUsingGETParams{

		Context: ctx,
	}
}

// NewGetUserRoleMappingGivenUserIDUsingGETParamsWithHTTPClient creates a new GetUserRoleMappingGivenUserIDUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetUserRoleMappingGivenUserIDUsingGETParamsWithHTTPClient(client *http.Client) *GetUserRoleMappingGivenUserIDUsingGETParams {
	var ()
	return &GetUserRoleMappingGivenUserIDUsingGETParams{
		HTTPClient: client,
	}
}

/*GetUserRoleMappingGivenUserIDUsingGETParams contains all the parameters to send to the API endpoint
for the get user role mapping given user Id using g e t operation typically these are written to a http.Request
*/
type GetUserRoleMappingGivenUserIDUsingGETParams struct {

	/*Uservmid
	  uservmid

	*/
	Uservmid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) WithTimeout(timeout time.Duration) *GetUserRoleMappingGivenUserIDUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) WithContext(ctx context.Context) *GetUserRoleMappingGivenUserIDUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) WithHTTPClient(client *http.Client) *GetUserRoleMappingGivenUserIDUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUservmid adds the uservmid to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) WithUservmid(uservmid string) *GetUserRoleMappingGivenUserIDUsingGETParams {
	o.SetUservmid(uservmid)
	return o
}

// SetUservmid adds the uservmid to the get user role mapping given user Id using g e t params
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) SetUservmid(uservmid string) {
	o.Uservmid = uservmid
}

// WriteToRequest writes these params to a swagger request
func (o *GetUserRoleMappingGivenUserIDUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param uservmid
	if err := r.SetPathParam("uservmid", o.Uservmid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
