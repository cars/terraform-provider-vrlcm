// Code generated by go-swagger; DO NOT EDIT.

package deployments_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// NewRevertProductSnapshotRequestUsingPOSTParams creates a new RevertProductSnapshotRequestUsingPOSTParams object
// with the default values initialized.
func NewRevertProductSnapshotRequestUsingPOSTParams() *RevertProductSnapshotRequestUsingPOSTParams {
	var ()
	return &RevertProductSnapshotRequestUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRevertProductSnapshotRequestUsingPOSTParamsWithTimeout creates a new RevertProductSnapshotRequestUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRevertProductSnapshotRequestUsingPOSTParamsWithTimeout(timeout time.Duration) *RevertProductSnapshotRequestUsingPOSTParams {
	var ()
	return &RevertProductSnapshotRequestUsingPOSTParams{

		timeout: timeout,
	}
}

// NewRevertProductSnapshotRequestUsingPOSTParamsWithContext creates a new RevertProductSnapshotRequestUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewRevertProductSnapshotRequestUsingPOSTParamsWithContext(ctx context.Context) *RevertProductSnapshotRequestUsingPOSTParams {
	var ()
	return &RevertProductSnapshotRequestUsingPOSTParams{

		Context: ctx,
	}
}

// NewRevertProductSnapshotRequestUsingPOSTParamsWithHTTPClient creates a new RevertProductSnapshotRequestUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRevertProductSnapshotRequestUsingPOSTParamsWithHTTPClient(client *http.Client) *RevertProductSnapshotRequestUsingPOSTParams {
	var ()
	return &RevertProductSnapshotRequestUsingPOSTParams{
		HTTPClient: client,
	}
}

/*RevertProductSnapshotRequestUsingPOSTParams contains all the parameters to send to the API endpoint
for the revert product snapshot request using p o s t operation typically these are written to a http.Request
*/
type RevertProductSnapshotRequestUsingPOSTParams struct {

	/*EnvironmentID
	  environmentId

	*/
	EnvironmentID string
	/*ProductID
	  productId

	*/
	ProductID string
	/*SnapshotRevertRequestDTO
	  snapshotRevertRequestDTO

	*/
	SnapshotRevertRequestDTO *models.SnapshotRevertRequestDTO

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) WithTimeout(timeout time.Duration) *RevertProductSnapshotRequestUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) WithContext(ctx context.Context) *RevertProductSnapshotRequestUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) WithHTTPClient(client *http.Client) *RevertProductSnapshotRequestUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironmentID adds the environmentID to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) WithEnvironmentID(environmentID string) *RevertProductSnapshotRequestUsingPOSTParams {
	o.SetEnvironmentID(environmentID)
	return o
}

// SetEnvironmentID adds the environmentId to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) SetEnvironmentID(environmentID string) {
	o.EnvironmentID = environmentID
}

// WithProductID adds the productID to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) WithProductID(productID string) *RevertProductSnapshotRequestUsingPOSTParams {
	o.SetProductID(productID)
	return o
}

// SetProductID adds the productId to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) SetProductID(productID string) {
	o.ProductID = productID
}

// WithSnapshotRevertRequestDTO adds the snapshotRevertRequestDTO to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) WithSnapshotRevertRequestDTO(snapshotRevertRequestDTO *models.SnapshotRevertRequestDTO) *RevertProductSnapshotRequestUsingPOSTParams {
	o.SetSnapshotRevertRequestDTO(snapshotRevertRequestDTO)
	return o
}

// SetSnapshotRevertRequestDTO adds the snapshotRevertRequestDTO to the revert product snapshot request using p o s t params
func (o *RevertProductSnapshotRequestUsingPOSTParams) SetSnapshotRevertRequestDTO(snapshotRevertRequestDTO *models.SnapshotRevertRequestDTO) {
	o.SnapshotRevertRequestDTO = snapshotRevertRequestDTO
}

// WriteToRequest writes these params to a swagger request
func (o *RevertProductSnapshotRequestUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param environmentId
	if err := r.SetPathParam("environmentId", o.EnvironmentID); err != nil {
		return err
	}

	// path param productId
	if err := r.SetPathParam("productId", o.ProductID); err != nil {
		return err
	}

	if o.SnapshotRevertRequestDTO != nil {
		if err := r.SetBodyParam(o.SnapshotRevertRequestDTO); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
