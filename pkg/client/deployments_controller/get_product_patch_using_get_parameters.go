// Code generated by go-swagger; DO NOT EDIT.

package deployments_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetProductPatchUsingGETParams creates a new GetProductPatchUsingGETParams object
// with the default values initialized.
func NewGetProductPatchUsingGETParams() *GetProductPatchUsingGETParams {
	var ()
	return &GetProductPatchUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetProductPatchUsingGETParamsWithTimeout creates a new GetProductPatchUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetProductPatchUsingGETParamsWithTimeout(timeout time.Duration) *GetProductPatchUsingGETParams {
	var ()
	return &GetProductPatchUsingGETParams{

		timeout: timeout,
	}
}

// NewGetProductPatchUsingGETParamsWithContext creates a new GetProductPatchUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetProductPatchUsingGETParamsWithContext(ctx context.Context) *GetProductPatchUsingGETParams {
	var ()
	return &GetProductPatchUsingGETParams{

		Context: ctx,
	}
}

// NewGetProductPatchUsingGETParamsWithHTTPClient creates a new GetProductPatchUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetProductPatchUsingGETParamsWithHTTPClient(client *http.Client) *GetProductPatchUsingGETParams {
	var ()
	return &GetProductPatchUsingGETParams{
		HTTPClient: client,
	}
}

/*GetProductPatchUsingGETParams contains all the parameters to send to the API endpoint
for the get product patch using g e t operation typically these are written to a http.Request
*/
type GetProductPatchUsingGETParams struct {

	/*EnvironmentID
	  environmentId

	*/
	EnvironmentID *string
	/*ProductID
	  productId

	*/
	ProductID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) WithTimeout(timeout time.Duration) *GetProductPatchUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) WithContext(ctx context.Context) *GetProductPatchUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) WithHTTPClient(client *http.Client) *GetProductPatchUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironmentID adds the environmentID to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) WithEnvironmentID(environmentID *string) *GetProductPatchUsingGETParams {
	o.SetEnvironmentID(environmentID)
	return o
}

// SetEnvironmentID adds the environmentId to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) SetEnvironmentID(environmentID *string) {
	o.EnvironmentID = environmentID
}

// WithProductID adds the productID to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) WithProductID(productID *string) *GetProductPatchUsingGETParams {
	o.SetProductID(productID)
	return o
}

// SetProductID adds the productId to the get product patch using g e t params
func (o *GetProductPatchUsingGETParams) SetProductID(productID *string) {
	o.ProductID = productID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProductPatchUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EnvironmentID != nil {

		// query param environmentId
		var qrEnvironmentID string
		if o.EnvironmentID != nil {
			qrEnvironmentID = *o.EnvironmentID
		}
		qEnvironmentID := qrEnvironmentID
		if qEnvironmentID != "" {
			if err := r.SetQueryParam("environmentId", qEnvironmentID); err != nil {
				return err
			}
		}

	}

	if o.ProductID != nil {

		// query param productId
		var qrProductID string
		if o.ProductID != nil {
			qrProductID = *o.ProductID
		}
		qProductID := qrProductID
		if qProductID != "" {
			if err := r.SetQueryParam("productId", qProductID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
