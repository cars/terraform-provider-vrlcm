// Code generated by go-swagger; DO NOT EDIT.

package deployments_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetProductUpgradeURLUsingGETReader is a Reader for the GetProductUpgradeURLUsingGET structure.
type GetProductUpgradeURLUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProductUpgradeURLUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProductUpgradeURLUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetProductUpgradeURLUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProductUpgradeURLUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProductUpgradeURLUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProductUpgradeURLUsingGETOK creates a GetProductUpgradeURLUsingGETOK with default headers values
func NewGetProductUpgradeURLUsingGETOK() *GetProductUpgradeURLUsingGETOK {
	return &GetProductUpgradeURLUsingGETOK{}
}

/*GetProductUpgradeURLUsingGETOK handles this case with default header values.

OK
*/
type GetProductUpgradeURLUsingGETOK struct {
	Payload string
}

func (o *GetProductUpgradeURLUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/products/{productId}/version/{version}/lcmrepositoryurl][%d] getProductUpgradeUrlUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProductUpgradeURLUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetProductUpgradeURLUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductUpgradeURLUsingGETUnauthorized creates a GetProductUpgradeURLUsingGETUnauthorized with default headers values
func NewGetProductUpgradeURLUsingGETUnauthorized() *GetProductUpgradeURLUsingGETUnauthorized {
	return &GetProductUpgradeURLUsingGETUnauthorized{}
}

/*GetProductUpgradeURLUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetProductUpgradeURLUsingGETUnauthorized struct {
}

func (o *GetProductUpgradeURLUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/products/{productId}/version/{version}/lcmrepositoryurl][%d] getProductUpgradeUrlUsingGETUnauthorized ", 401)
}

func (o *GetProductUpgradeURLUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductUpgradeURLUsingGETForbidden creates a GetProductUpgradeURLUsingGETForbidden with default headers values
func NewGetProductUpgradeURLUsingGETForbidden() *GetProductUpgradeURLUsingGETForbidden {
	return &GetProductUpgradeURLUsingGETForbidden{}
}

/*GetProductUpgradeURLUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetProductUpgradeURLUsingGETForbidden struct {
}

func (o *GetProductUpgradeURLUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/products/{productId}/version/{version}/lcmrepositoryurl][%d] getProductUpgradeUrlUsingGETForbidden ", 403)
}

func (o *GetProductUpgradeURLUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductUpgradeURLUsingGETNotFound creates a GetProductUpgradeURLUsingGETNotFound with default headers values
func NewGetProductUpgradeURLUsingGETNotFound() *GetProductUpgradeURLUsingGETNotFound {
	return &GetProductUpgradeURLUsingGETNotFound{}
}

/*GetProductUpgradeURLUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetProductUpgradeURLUsingGETNotFound struct {
}

func (o *GetProductUpgradeURLUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/products/{productId}/version/{version}/lcmrepositoryurl][%d] getProductUpgradeUrlUsingGETNotFound ", 404)
}

func (o *GetProductUpgradeURLUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
