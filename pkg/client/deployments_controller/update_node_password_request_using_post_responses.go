// Code generated by go-swagger; DO NOT EDIT.

package deployments_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// UpdateNodePasswordRequestUsingPOSTReader is a Reader for the UpdateNodePasswordRequestUsingPOST structure.
type UpdateNodePasswordRequestUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNodePasswordRequestUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNodePasswordRequestUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateNodePasswordRequestUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateNodePasswordRequestUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateNodePasswordRequestUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateNodePasswordRequestUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNodePasswordRequestUsingPOSTOK creates a UpdateNodePasswordRequestUsingPOSTOK with default headers values
func NewUpdateNodePasswordRequestUsingPOSTOK() *UpdateNodePasswordRequestUsingPOSTOK {
	return &UpdateNodePasswordRequestUsingPOSTOK{}
}

/*UpdateNodePasswordRequestUsingPOSTOK handles this case with default header values.

OK
*/
type UpdateNodePasswordRequestUsingPOSTOK struct {
	Payload *models.GenericRequestResponse
}

func (o *UpdateNodePasswordRequestUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/lcops/api/environments/{environmentId}/products/{productId}/node/{nodeType}][%d] updateNodePasswordRequestUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *UpdateNodePasswordRequestUsingPOSTOK) GetPayload() *models.GenericRequestResponse {
	return o.Payload
}

func (o *UpdateNodePasswordRequestUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNodePasswordRequestUsingPOSTCreated creates a UpdateNodePasswordRequestUsingPOSTCreated with default headers values
func NewUpdateNodePasswordRequestUsingPOSTCreated() *UpdateNodePasswordRequestUsingPOSTCreated {
	return &UpdateNodePasswordRequestUsingPOSTCreated{}
}

/*UpdateNodePasswordRequestUsingPOSTCreated handles this case with default header values.

Created
*/
type UpdateNodePasswordRequestUsingPOSTCreated struct {
}

func (o *UpdateNodePasswordRequestUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/lcops/api/environments/{environmentId}/products/{productId}/node/{nodeType}][%d] updateNodePasswordRequestUsingPOSTCreated ", 201)
}

func (o *UpdateNodePasswordRequestUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNodePasswordRequestUsingPOSTUnauthorized creates a UpdateNodePasswordRequestUsingPOSTUnauthorized with default headers values
func NewUpdateNodePasswordRequestUsingPOSTUnauthorized() *UpdateNodePasswordRequestUsingPOSTUnauthorized {
	return &UpdateNodePasswordRequestUsingPOSTUnauthorized{}
}

/*UpdateNodePasswordRequestUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateNodePasswordRequestUsingPOSTUnauthorized struct {
}

func (o *UpdateNodePasswordRequestUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/lcops/api/environments/{environmentId}/products/{productId}/node/{nodeType}][%d] updateNodePasswordRequestUsingPOSTUnauthorized ", 401)
}

func (o *UpdateNodePasswordRequestUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNodePasswordRequestUsingPOSTForbidden creates a UpdateNodePasswordRequestUsingPOSTForbidden with default headers values
func NewUpdateNodePasswordRequestUsingPOSTForbidden() *UpdateNodePasswordRequestUsingPOSTForbidden {
	return &UpdateNodePasswordRequestUsingPOSTForbidden{}
}

/*UpdateNodePasswordRequestUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type UpdateNodePasswordRequestUsingPOSTForbidden struct {
}

func (o *UpdateNodePasswordRequestUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/lcops/api/environments/{environmentId}/products/{productId}/node/{nodeType}][%d] updateNodePasswordRequestUsingPOSTForbidden ", 403)
}

func (o *UpdateNodePasswordRequestUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNodePasswordRequestUsingPOSTNotFound creates a UpdateNodePasswordRequestUsingPOSTNotFound with default headers values
func NewUpdateNodePasswordRequestUsingPOSTNotFound() *UpdateNodePasswordRequestUsingPOSTNotFound {
	return &UpdateNodePasswordRequestUsingPOSTNotFound{}
}

/*UpdateNodePasswordRequestUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type UpdateNodePasswordRequestUsingPOSTNotFound struct {
}

func (o *UpdateNodePasswordRequestUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/lcops/api/environments/{environmentId}/products/{productId}/node/{nodeType}][%d] updateNodePasswordRequestUsingPOSTNotFound ", 404)
}

func (o *UpdateNodePasswordRequestUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
