// Code generated by go-swagger; DO NOT EDIT.

package authentication_group_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGroupsByTypeUsingGETReader is a Reader for the GetGroupsByTypeUsingGET structure.
type GetGroupsByTypeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupsByTypeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupsByTypeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupsByTypeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupsByTypeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupsByTypeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupsByTypeUsingGETOK creates a GetGroupsByTypeUsingGETOK with default headers values
func NewGetGroupsByTypeUsingGETOK() *GetGroupsByTypeUsingGETOK {
	return &GetGroupsByTypeUsingGETOK{}
}

/*GetGroupsByTypeUsingGETOK handles this case with default header values.

OK
*/
type GetGroupsByTypeUsingGETOK struct {
	Payload interface{}
}

func (o *GetGroupsByTypeUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/type/{groupType}][%d] getGroupsByTypeUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGroupsByTypeUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupsByTypeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsByTypeUsingGETUnauthorized creates a GetGroupsByTypeUsingGETUnauthorized with default headers values
func NewGetGroupsByTypeUsingGETUnauthorized() *GetGroupsByTypeUsingGETUnauthorized {
	return &GetGroupsByTypeUsingGETUnauthorized{}
}

/*GetGroupsByTypeUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetGroupsByTypeUsingGETUnauthorized struct {
}

func (o *GetGroupsByTypeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/type/{groupType}][%d] getGroupsByTypeUsingGETUnauthorized ", 401)
}

func (o *GetGroupsByTypeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupsByTypeUsingGETForbidden creates a GetGroupsByTypeUsingGETForbidden with default headers values
func NewGetGroupsByTypeUsingGETForbidden() *GetGroupsByTypeUsingGETForbidden {
	return &GetGroupsByTypeUsingGETForbidden{}
}

/*GetGroupsByTypeUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetGroupsByTypeUsingGETForbidden struct {
}

func (o *GetGroupsByTypeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/type/{groupType}][%d] getGroupsByTypeUsingGETForbidden ", 403)
}

func (o *GetGroupsByTypeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupsByTypeUsingGETNotFound creates a GetGroupsByTypeUsingGETNotFound with default headers values
func NewGetGroupsByTypeUsingGETNotFound() *GetGroupsByTypeUsingGETNotFound {
	return &GetGroupsByTypeUsingGETNotFound{}
}

/*GetGroupsByTypeUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetGroupsByTypeUsingGETNotFound struct {
}

func (o *GetGroupsByTypeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/type/{groupType}][%d] getGroupsByTypeUsingGETNotFound ", 404)
}

func (o *GetGroupsByTypeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
