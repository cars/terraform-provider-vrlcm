// Code generated by go-swagger; DO NOT EDIT.

package authentication_group_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGroupByIDUsingGETReader is a Reader for the GetGroupByIDUsingGET structure.
type GetGroupByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupByIDUsingGETOK creates a GetGroupByIDUsingGETOK with default headers values
func NewGetGroupByIDUsingGETOK() *GetGroupByIDUsingGETOK {
	return &GetGroupByIDUsingGETOK{}
}

/*GetGroupByIDUsingGETOK handles this case with default header values.

OK
*/
type GetGroupByIDUsingGETOK struct {
	Payload interface{}
}

func (o *GetGroupByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/{vmid}][%d] getGroupByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGroupByIDUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupByIDUsingGETUnauthorized creates a GetGroupByIDUsingGETUnauthorized with default headers values
func NewGetGroupByIDUsingGETUnauthorized() *GetGroupByIDUsingGETUnauthorized {
	return &GetGroupByIDUsingGETUnauthorized{}
}

/*GetGroupByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetGroupByIDUsingGETUnauthorized struct {
}

func (o *GetGroupByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/{vmid}][%d] getGroupByIdUsingGETUnauthorized ", 401)
}

func (o *GetGroupByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupByIDUsingGETForbidden creates a GetGroupByIDUsingGETForbidden with default headers values
func NewGetGroupByIDUsingGETForbidden() *GetGroupByIDUsingGETForbidden {
	return &GetGroupByIDUsingGETForbidden{}
}

/*GetGroupByIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetGroupByIDUsingGETForbidden struct {
}

func (o *GetGroupByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/{vmid}][%d] getGroupByIdUsingGETForbidden ", 403)
}

func (o *GetGroupByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupByIDUsingGETNotFound creates a GetGroupByIDUsingGETNotFound with default headers values
func NewGetGroupByIDUsingGETNotFound() *GetGroupByIDUsingGETNotFound {
	return &GetGroupByIDUsingGETNotFound{}
}

/*GetGroupByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetGroupByIDUsingGETNotFound struct {
}

func (o *GetGroupByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/{vmid}][%d] getGroupByIdUsingGETNotFound ", 404)
}

func (o *GetGroupByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
