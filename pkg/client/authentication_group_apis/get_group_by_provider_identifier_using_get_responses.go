// Code generated by go-swagger; DO NOT EDIT.

package authentication_group_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGroupByProviderIdentifierUsingGETReader is a Reader for the GetGroupByProviderIdentifierUsingGET structure.
type GetGroupByProviderIdentifierUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupByProviderIdentifierUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupByProviderIdentifierUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupByProviderIdentifierUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupByProviderIdentifierUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupByProviderIdentifierUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupByProviderIdentifierUsingGETOK creates a GetGroupByProviderIdentifierUsingGETOK with default headers values
func NewGetGroupByProviderIdentifierUsingGETOK() *GetGroupByProviderIdentifierUsingGETOK {
	return &GetGroupByProviderIdentifierUsingGETOK{}
}

/*GetGroupByProviderIdentifierUsingGETOK handles this case with default header values.

OK
*/
type GetGroupByProviderIdentifierUsingGETOK struct {
	Payload interface{}
}

func (o *GetGroupByProviderIdentifierUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/providerId/{providerId}][%d] getGroupByProviderIdentifierUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGroupByProviderIdentifierUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupByProviderIdentifierUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupByProviderIdentifierUsingGETUnauthorized creates a GetGroupByProviderIdentifierUsingGETUnauthorized with default headers values
func NewGetGroupByProviderIdentifierUsingGETUnauthorized() *GetGroupByProviderIdentifierUsingGETUnauthorized {
	return &GetGroupByProviderIdentifierUsingGETUnauthorized{}
}

/*GetGroupByProviderIdentifierUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetGroupByProviderIdentifierUsingGETUnauthorized struct {
}

func (o *GetGroupByProviderIdentifierUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/providerId/{providerId}][%d] getGroupByProviderIdentifierUsingGETUnauthorized ", 401)
}

func (o *GetGroupByProviderIdentifierUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupByProviderIdentifierUsingGETForbidden creates a GetGroupByProviderIdentifierUsingGETForbidden with default headers values
func NewGetGroupByProviderIdentifierUsingGETForbidden() *GetGroupByProviderIdentifierUsingGETForbidden {
	return &GetGroupByProviderIdentifierUsingGETForbidden{}
}

/*GetGroupByProviderIdentifierUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetGroupByProviderIdentifierUsingGETForbidden struct {
}

func (o *GetGroupByProviderIdentifierUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/providerId/{providerId}][%d] getGroupByProviderIdentifierUsingGETForbidden ", 403)
}

func (o *GetGroupByProviderIdentifierUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupByProviderIdentifierUsingGETNotFound creates a GetGroupByProviderIdentifierUsingGETNotFound with default headers values
func NewGetGroupByProviderIdentifierUsingGETNotFound() *GetGroupByProviderIdentifierUsingGETNotFound {
	return &GetGroupByProviderIdentifierUsingGETNotFound{}
}

/*GetGroupByProviderIdentifierUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetGroupByProviderIdentifierUsingGETNotFound struct {
}

func (o *GetGroupByProviderIdentifierUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/providerId/{providerId}][%d] getGroupByProviderIdentifierUsingGETNotFound ", 404)
}

func (o *GetGroupByProviderIdentifierUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
