// Code generated by go-swagger; DO NOT EDIT.

package authentication_group_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGroupByDisplayNameAndDomainUsingGETReader is a Reader for the GetGroupByDisplayNameAndDomainUsingGET structure.
type GetGroupByDisplayNameAndDomainUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupByDisplayNameAndDomainUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupByDisplayNameAndDomainUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupByDisplayNameAndDomainUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupByDisplayNameAndDomainUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupByDisplayNameAndDomainUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupByDisplayNameAndDomainUsingGETOK creates a GetGroupByDisplayNameAndDomainUsingGETOK with default headers values
func NewGetGroupByDisplayNameAndDomainUsingGETOK() *GetGroupByDisplayNameAndDomainUsingGETOK {
	return &GetGroupByDisplayNameAndDomainUsingGETOK{}
}

/*GetGroupByDisplayNameAndDomainUsingGETOK handles this case with default header values.

OK
*/
type GetGroupByDisplayNameAndDomainUsingGETOK struct {
	Payload interface{}
}

func (o *GetGroupByDisplayNameAndDomainUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/name/{displayname}/domain/{domain}][%d] getGroupByDisplayNameAndDomainUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGroupByDisplayNameAndDomainUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupByDisplayNameAndDomainUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupByDisplayNameAndDomainUsingGETUnauthorized creates a GetGroupByDisplayNameAndDomainUsingGETUnauthorized with default headers values
func NewGetGroupByDisplayNameAndDomainUsingGETUnauthorized() *GetGroupByDisplayNameAndDomainUsingGETUnauthorized {
	return &GetGroupByDisplayNameAndDomainUsingGETUnauthorized{}
}

/*GetGroupByDisplayNameAndDomainUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetGroupByDisplayNameAndDomainUsingGETUnauthorized struct {
}

func (o *GetGroupByDisplayNameAndDomainUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/name/{displayname}/domain/{domain}][%d] getGroupByDisplayNameAndDomainUsingGETUnauthorized ", 401)
}

func (o *GetGroupByDisplayNameAndDomainUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupByDisplayNameAndDomainUsingGETForbidden creates a GetGroupByDisplayNameAndDomainUsingGETForbidden with default headers values
func NewGetGroupByDisplayNameAndDomainUsingGETForbidden() *GetGroupByDisplayNameAndDomainUsingGETForbidden {
	return &GetGroupByDisplayNameAndDomainUsingGETForbidden{}
}

/*GetGroupByDisplayNameAndDomainUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetGroupByDisplayNameAndDomainUsingGETForbidden struct {
}

func (o *GetGroupByDisplayNameAndDomainUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/name/{displayname}/domain/{domain}][%d] getGroupByDisplayNameAndDomainUsingGETForbidden ", 403)
}

func (o *GetGroupByDisplayNameAndDomainUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupByDisplayNameAndDomainUsingGETNotFound creates a GetGroupByDisplayNameAndDomainUsingGETNotFound with default headers values
func NewGetGroupByDisplayNameAndDomainUsingGETNotFound() *GetGroupByDisplayNameAndDomainUsingGETNotFound {
	return &GetGroupByDisplayNameAndDomainUsingGETNotFound{}
}

/*GetGroupByDisplayNameAndDomainUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetGroupByDisplayNameAndDomainUsingGETNotFound struct {
}

func (o *GetGroupByDisplayNameAndDomainUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/groups/name/{displayname}/domain/{domain}][%d] getGroupByDisplayNameAndDomainUsingGETNotFound ", 404)
}

func (o *GetGroupByDisplayNameAndDomainUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
