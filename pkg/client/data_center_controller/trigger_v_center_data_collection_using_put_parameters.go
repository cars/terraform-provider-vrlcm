// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewTriggerVCenterDataCollectionUsingPUTParams creates a new TriggerVCenterDataCollectionUsingPUTParams object
// with the default values initialized.
func NewTriggerVCenterDataCollectionUsingPUTParams() *TriggerVCenterDataCollectionUsingPUTParams {
	var ()
	return &TriggerVCenterDataCollectionUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTriggerVCenterDataCollectionUsingPUTParamsWithTimeout creates a new TriggerVCenterDataCollectionUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTriggerVCenterDataCollectionUsingPUTParamsWithTimeout(timeout time.Duration) *TriggerVCenterDataCollectionUsingPUTParams {
	var ()
	return &TriggerVCenterDataCollectionUsingPUTParams{

		timeout: timeout,
	}
}

// NewTriggerVCenterDataCollectionUsingPUTParamsWithContext creates a new TriggerVCenterDataCollectionUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewTriggerVCenterDataCollectionUsingPUTParamsWithContext(ctx context.Context) *TriggerVCenterDataCollectionUsingPUTParams {
	var ()
	return &TriggerVCenterDataCollectionUsingPUTParams{

		Context: ctx,
	}
}

// NewTriggerVCenterDataCollectionUsingPUTParamsWithHTTPClient creates a new TriggerVCenterDataCollectionUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTriggerVCenterDataCollectionUsingPUTParamsWithHTTPClient(client *http.Client) *TriggerVCenterDataCollectionUsingPUTParams {
	var ()
	return &TriggerVCenterDataCollectionUsingPUTParams{
		HTTPClient: client,
	}
}

/*TriggerVCenterDataCollectionUsingPUTParams contains all the parameters to send to the API endpoint
for the trigger v center data collection using p u t operation typically these are written to a http.Request
*/
type TriggerVCenterDataCollectionUsingPUTParams struct {

	/*DataCenterName
	  dataCenterName

	*/
	DataCenterName string
	/*RegionName
	  regionName

	*/
	RegionName string
	/*VCenterName
	  vCenterName

	*/
	VCenterName string
	/*ZoneName
	  zoneName

	*/
	ZoneName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithTimeout(timeout time.Duration) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithContext(ctx context.Context) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithHTTPClient(client *http.Client) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDataCenterName adds the dataCenterName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithDataCenterName(dataCenterName string) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetDataCenterName(dataCenterName)
	return o
}

// SetDataCenterName adds the dataCenterName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetDataCenterName(dataCenterName string) {
	o.DataCenterName = dataCenterName
}

// WithRegionName adds the regionName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithRegionName(regionName string) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetRegionName(regionName)
	return o
}

// SetRegionName adds the regionName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetRegionName(regionName string) {
	o.RegionName = regionName
}

// WithVCenterName adds the vCenterName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithVCenterName(vCenterName string) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetVCenterName(vCenterName)
	return o
}

// SetVCenterName adds the vCenterName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetVCenterName(vCenterName string) {
	o.VCenterName = vCenterName
}

// WithZoneName adds the zoneName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) WithZoneName(zoneName string) *TriggerVCenterDataCollectionUsingPUTParams {
	o.SetZoneName(zoneName)
	return o
}

// SetZoneName adds the zoneName to the trigger v center data collection using p u t params
func (o *TriggerVCenterDataCollectionUsingPUTParams) SetZoneName(zoneName string) {
	o.ZoneName = zoneName
}

// WriteToRequest writes these params to a swagger request
func (o *TriggerVCenterDataCollectionUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param dataCenterName
	if err := r.SetPathParam("dataCenterName", o.DataCenterName); err != nil {
		return err
	}

	// path param regionName
	if err := r.SetPathParam("regionName", o.RegionName); err != nil {
		return err
	}

	// path param vCenterName
	if err := r.SetPathParam("vCenterName", o.VCenterName); err != nil {
		return err
	}

	// path param zoneName
	if err := r.SetPathParam("zoneName", o.ZoneName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
