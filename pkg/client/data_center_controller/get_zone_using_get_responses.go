// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetZoneUsingGETReader is a Reader for the GetZoneUsingGET structure.
type GetZoneUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetZoneUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetZoneUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetZoneUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetZoneUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetZoneUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetZoneUsingGETOK creates a GetZoneUsingGETOK with default headers values
func NewGetZoneUsingGETOK() *GetZoneUsingGETOK {
	return &GetZoneUsingGETOK{}
}

/*GetZoneUsingGETOK handles this case with default header values.

OK
*/
type GetZoneUsingGETOK struct {
}

func (o *GetZoneUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}][%d] getZoneUsingGETOK ", 200)
}

func (o *GetZoneUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetZoneUsingGETUnauthorized creates a GetZoneUsingGETUnauthorized with default headers values
func NewGetZoneUsingGETUnauthorized() *GetZoneUsingGETUnauthorized {
	return &GetZoneUsingGETUnauthorized{}
}

/*GetZoneUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetZoneUsingGETUnauthorized struct {
}

func (o *GetZoneUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}][%d] getZoneUsingGETUnauthorized ", 401)
}

func (o *GetZoneUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetZoneUsingGETForbidden creates a GetZoneUsingGETForbidden with default headers values
func NewGetZoneUsingGETForbidden() *GetZoneUsingGETForbidden {
	return &GetZoneUsingGETForbidden{}
}

/*GetZoneUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetZoneUsingGETForbidden struct {
}

func (o *GetZoneUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}][%d] getZoneUsingGETForbidden ", 403)
}

func (o *GetZoneUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetZoneUsingGETNotFound creates a GetZoneUsingGETNotFound with default headers values
func NewGetZoneUsingGETNotFound() *GetZoneUsingGETNotFound {
	return &GetZoneUsingGETNotFound{}
}

/*GetZoneUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetZoneUsingGETNotFound struct {
}

func (o *GetZoneUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}][%d] getZoneUsingGETNotFound ", 404)
}

func (o *GetZoneUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
