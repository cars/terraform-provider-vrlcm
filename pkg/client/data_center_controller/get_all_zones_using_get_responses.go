// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetAllZonesUsingGETReader is a Reader for the GetAllZonesUsingGET structure.
type GetAllZonesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllZonesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllZonesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllZonesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllZonesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllZonesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllZonesUsingGETOK creates a GetAllZonesUsingGETOK with default headers values
func NewGetAllZonesUsingGETOK() *GetAllZonesUsingGETOK {
	return &GetAllZonesUsingGETOK{}
}

/*GetAllZonesUsingGETOK handles this case with default header values.

OK
*/
type GetAllZonesUsingGETOK struct {
	Payload []*models.ZoneRequestDTO
}

func (o *GetAllZonesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones][%d] getAllZonesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllZonesUsingGETOK) GetPayload() []*models.ZoneRequestDTO {
	return o.Payload
}

func (o *GetAllZonesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllZonesUsingGETUnauthorized creates a GetAllZonesUsingGETUnauthorized with default headers values
func NewGetAllZonesUsingGETUnauthorized() *GetAllZonesUsingGETUnauthorized {
	return &GetAllZonesUsingGETUnauthorized{}
}

/*GetAllZonesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllZonesUsingGETUnauthorized struct {
}

func (o *GetAllZonesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones][%d] getAllZonesUsingGETUnauthorized ", 401)
}

func (o *GetAllZonesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllZonesUsingGETForbidden creates a GetAllZonesUsingGETForbidden with default headers values
func NewGetAllZonesUsingGETForbidden() *GetAllZonesUsingGETForbidden {
	return &GetAllZonesUsingGETForbidden{}
}

/*GetAllZonesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllZonesUsingGETForbidden struct {
}

func (o *GetAllZonesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones][%d] getAllZonesUsingGETForbidden ", 403)
}

func (o *GetAllZonesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllZonesUsingGETNotFound creates a GetAllZonesUsingGETNotFound with default headers values
func NewGetAllZonesUsingGETNotFound() *GetAllZonesUsingGETNotFound {
	return &GetAllZonesUsingGETNotFound{}
}

/*GetAllZonesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllZonesUsingGETNotFound struct {
}

func (o *GetAllZonesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones][%d] getAllZonesUsingGETNotFound ", 404)
}

func (o *GetAllZonesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
