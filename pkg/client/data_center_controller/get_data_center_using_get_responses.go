// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetDataCenterUsingGETReader is a Reader for the GetDataCenterUsingGET structure.
type GetDataCenterUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDataCenterUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDataCenterUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDataCenterUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDataCenterUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDataCenterUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDataCenterUsingGETOK creates a GetDataCenterUsingGETOK with default headers values
func NewGetDataCenterUsingGETOK() *GetDataCenterUsingGETOK {
	return &GetDataCenterUsingGETOK{}
}

/*GetDataCenterUsingGETOK handles this case with default header values.

OK
*/
type GetDataCenterUsingGETOK struct {
	Payload *models.DataCenterRequestDTO
}

func (o *GetDataCenterUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}][%d] getDataCenterUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDataCenterUsingGETOK) GetPayload() *models.DataCenterRequestDTO {
	return o.Payload
}

func (o *GetDataCenterUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataCenterRequestDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataCenterUsingGETUnauthorized creates a GetDataCenterUsingGETUnauthorized with default headers values
func NewGetDataCenterUsingGETUnauthorized() *GetDataCenterUsingGETUnauthorized {
	return &GetDataCenterUsingGETUnauthorized{}
}

/*GetDataCenterUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDataCenterUsingGETUnauthorized struct {
}

func (o *GetDataCenterUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}][%d] getDataCenterUsingGETUnauthorized ", 401)
}

func (o *GetDataCenterUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDataCenterUsingGETForbidden creates a GetDataCenterUsingGETForbidden with default headers values
func NewGetDataCenterUsingGETForbidden() *GetDataCenterUsingGETForbidden {
	return &GetDataCenterUsingGETForbidden{}
}

/*GetDataCenterUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDataCenterUsingGETForbidden struct {
}

func (o *GetDataCenterUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}][%d] getDataCenterUsingGETForbidden ", 403)
}

func (o *GetDataCenterUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDataCenterUsingGETNotFound creates a GetDataCenterUsingGETNotFound with default headers values
func NewGetDataCenterUsingGETNotFound() *GetDataCenterUsingGETNotFound {
	return &GetDataCenterUsingGETNotFound{}
}

/*GetDataCenterUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDataCenterUsingGETNotFound struct {
}

func (o *GetDataCenterUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}][%d] getDataCenterUsingGETNotFound ", 404)
}

func (o *GetDataCenterUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
