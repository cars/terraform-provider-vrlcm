// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetAllDataCentersUsingGETReader is a Reader for the GetAllDataCentersUsingGET structure.
type GetAllDataCentersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllDataCentersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllDataCentersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllDataCentersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllDataCentersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllDataCentersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllDataCentersUsingGETOK creates a GetAllDataCentersUsingGETOK with default headers values
func NewGetAllDataCentersUsingGETOK() *GetAllDataCentersUsingGETOK {
	return &GetAllDataCentersUsingGETOK{}
}

/*GetAllDataCentersUsingGETOK handles this case with default header values.

OK
*/
type GetAllDataCentersUsingGETOK struct {
	Payload []*models.DataCenterRequestDTO
}

func (o *GetAllDataCentersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters][%d] getAllDataCentersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllDataCentersUsingGETOK) GetPayload() []*models.DataCenterRequestDTO {
	return o.Payload
}

func (o *GetAllDataCentersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllDataCentersUsingGETUnauthorized creates a GetAllDataCentersUsingGETUnauthorized with default headers values
func NewGetAllDataCentersUsingGETUnauthorized() *GetAllDataCentersUsingGETUnauthorized {
	return &GetAllDataCentersUsingGETUnauthorized{}
}

/*GetAllDataCentersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllDataCentersUsingGETUnauthorized struct {
}

func (o *GetAllDataCentersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters][%d] getAllDataCentersUsingGETUnauthorized ", 401)
}

func (o *GetAllDataCentersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDataCentersUsingGETForbidden creates a GetAllDataCentersUsingGETForbidden with default headers values
func NewGetAllDataCentersUsingGETForbidden() *GetAllDataCentersUsingGETForbidden {
	return &GetAllDataCentersUsingGETForbidden{}
}

/*GetAllDataCentersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllDataCentersUsingGETForbidden struct {
}

func (o *GetAllDataCentersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters][%d] getAllDataCentersUsingGETForbidden ", 403)
}

func (o *GetAllDataCentersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDataCentersUsingGETNotFound creates a GetAllDataCentersUsingGETNotFound with default headers values
func NewGetAllDataCentersUsingGETNotFound() *GetAllDataCentersUsingGETNotFound {
	return &GetAllDataCentersUsingGETNotFound{}
}

/*GetAllDataCentersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllDataCentersUsingGETNotFound struct {
}

func (o *GetAllDataCentersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters][%d] getAllDataCentersUsingGETNotFound ", 404)
}

func (o *GetAllDataCentersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
