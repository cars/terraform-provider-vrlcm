// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// NewCreateRegionUsingPOSTParams creates a new CreateRegionUsingPOSTParams object
// with the default values initialized.
func NewCreateRegionUsingPOSTParams() *CreateRegionUsingPOSTParams {
	var ()
	return &CreateRegionUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateRegionUsingPOSTParamsWithTimeout creates a new CreateRegionUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateRegionUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateRegionUsingPOSTParams {
	var ()
	return &CreateRegionUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateRegionUsingPOSTParamsWithContext creates a new CreateRegionUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateRegionUsingPOSTParamsWithContext(ctx context.Context) *CreateRegionUsingPOSTParams {
	var ()
	return &CreateRegionUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateRegionUsingPOSTParamsWithHTTPClient creates a new CreateRegionUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateRegionUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateRegionUsingPOSTParams {
	var ()
	return &CreateRegionUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateRegionUsingPOSTParams contains all the parameters to send to the API endpoint
for the create region using p o s t operation typically these are written to a http.Request
*/
type CreateRegionUsingPOSTParams struct {

	/*DataCenterName
	  dataCenterName

	*/
	DataCenterName string
	/*RegionRequestDTO
	  regionRequestDTO

	*/
	RegionRequestDTO *models.RegionRequestDTO

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateRegionUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) WithContext(ctx context.Context) *CreateRegionUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateRegionUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDataCenterName adds the dataCenterName to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) WithDataCenterName(dataCenterName string) *CreateRegionUsingPOSTParams {
	o.SetDataCenterName(dataCenterName)
	return o
}

// SetDataCenterName adds the dataCenterName to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) SetDataCenterName(dataCenterName string) {
	o.DataCenterName = dataCenterName
}

// WithRegionRequestDTO adds the regionRequestDTO to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) WithRegionRequestDTO(regionRequestDTO *models.RegionRequestDTO) *CreateRegionUsingPOSTParams {
	o.SetRegionRequestDTO(regionRequestDTO)
	return o
}

// SetRegionRequestDTO adds the regionRequestDTO to the create region using p o s t params
func (o *CreateRegionUsingPOSTParams) SetRegionRequestDTO(regionRequestDTO *models.RegionRequestDTO) {
	o.RegionRequestDTO = regionRequestDTO
}

// WriteToRequest writes these params to a swagger request
func (o *CreateRegionUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param dataCenterName
	if err := r.SetPathParam("dataCenterName", o.DataCenterName); err != nil {
		return err
	}

	if o.RegionRequestDTO != nil {
		if err := r.SetBodyParam(o.RegionRequestDTO); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
