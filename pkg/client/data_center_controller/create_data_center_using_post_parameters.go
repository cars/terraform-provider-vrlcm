// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// NewCreateDataCenterUsingPOSTParams creates a new CreateDataCenterUsingPOSTParams object
// with the default values initialized.
func NewCreateDataCenterUsingPOSTParams() *CreateDataCenterUsingPOSTParams {
	var ()
	return &CreateDataCenterUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDataCenterUsingPOSTParamsWithTimeout creates a new CreateDataCenterUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateDataCenterUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateDataCenterUsingPOSTParams {
	var ()
	return &CreateDataCenterUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateDataCenterUsingPOSTParamsWithContext creates a new CreateDataCenterUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateDataCenterUsingPOSTParamsWithContext(ctx context.Context) *CreateDataCenterUsingPOSTParams {
	var ()
	return &CreateDataCenterUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateDataCenterUsingPOSTParamsWithHTTPClient creates a new CreateDataCenterUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateDataCenterUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateDataCenterUsingPOSTParams {
	var ()
	return &CreateDataCenterUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateDataCenterUsingPOSTParams contains all the parameters to send to the API endpoint
for the create data center using p o s t operation typically these are written to a http.Request
*/
type CreateDataCenterUsingPOSTParams struct {

	/*DataCenterRequestDTO
	  dataCenterRequestDTO

	*/
	DataCenterRequestDTO *models.DataCenterRequestDTO

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateDataCenterUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) WithContext(ctx context.Context) *CreateDataCenterUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateDataCenterUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDataCenterRequestDTO adds the dataCenterRequestDTO to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) WithDataCenterRequestDTO(dataCenterRequestDTO *models.DataCenterRequestDTO) *CreateDataCenterUsingPOSTParams {
	o.SetDataCenterRequestDTO(dataCenterRequestDTO)
	return o
}

// SetDataCenterRequestDTO adds the dataCenterRequestDTO to the create data center using p o s t params
func (o *CreateDataCenterUsingPOSTParams) SetDataCenterRequestDTO(dataCenterRequestDTO *models.DataCenterRequestDTO) {
	o.DataCenterRequestDTO = dataCenterRequestDTO
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDataCenterUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DataCenterRequestDTO != nil {
		if err := r.SetBodyParam(o.DataCenterRequestDTO); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
