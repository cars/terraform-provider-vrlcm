// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetAllVCentersUsingGETReader is a Reader for the GetAllVCentersUsingGET structure.
type GetAllVCentersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllVCentersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllVCentersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllVCentersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllVCentersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllVCentersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllVCentersUsingGETOK creates a GetAllVCentersUsingGETOK with default headers values
func NewGetAllVCentersUsingGETOK() *GetAllVCentersUsingGETOK {
	return &GetAllVCentersUsingGETOK{}
}

/*GetAllVCentersUsingGETOK handles this case with default header values.

OK
*/
type GetAllVCentersUsingGETOK struct {
	Payload []*models.VCenterRequestDTO
}

func (o *GetAllVCentersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters][%d] getAllVCentersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllVCentersUsingGETOK) GetPayload() []*models.VCenterRequestDTO {
	return o.Payload
}

func (o *GetAllVCentersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCentersUsingGETUnauthorized creates a GetAllVCentersUsingGETUnauthorized with default headers values
func NewGetAllVCentersUsingGETUnauthorized() *GetAllVCentersUsingGETUnauthorized {
	return &GetAllVCentersUsingGETUnauthorized{}
}

/*GetAllVCentersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllVCentersUsingGETUnauthorized struct {
}

func (o *GetAllVCentersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters][%d] getAllVCentersUsingGETUnauthorized ", 401)
}

func (o *GetAllVCentersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllVCentersUsingGETForbidden creates a GetAllVCentersUsingGETForbidden with default headers values
func NewGetAllVCentersUsingGETForbidden() *GetAllVCentersUsingGETForbidden {
	return &GetAllVCentersUsingGETForbidden{}
}

/*GetAllVCentersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllVCentersUsingGETForbidden struct {
}

func (o *GetAllVCentersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters][%d] getAllVCentersUsingGETForbidden ", 403)
}

func (o *GetAllVCentersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllVCentersUsingGETNotFound creates a GetAllVCentersUsingGETNotFound with default headers values
func NewGetAllVCentersUsingGETNotFound() *GetAllVCentersUsingGETNotFound {
	return &GetAllVCentersUsingGETNotFound{}
}

/*GetAllVCentersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllVCentersUsingGETNotFound struct {
}

func (o *GetAllVCentersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters][%d] getAllVCentersUsingGETNotFound ", 404)
}

func (o *GetAllVCentersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
