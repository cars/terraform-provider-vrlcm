// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetVCenterUsingGET1Reader is a Reader for the GetVCenterUsingGET1 structure.
type GetVCenterUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVCenterUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVCenterUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVCenterUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVCenterUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVCenterUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVCenterUsingGET1OK creates a GetVCenterUsingGET1OK with default headers values
func NewGetVCenterUsingGET1OK() *GetVCenterUsingGET1OK {
	return &GetVCenterUsingGET1OK{}
}

/*GetVCenterUsingGET1OK handles this case with default header values.

OK
*/
type GetVCenterUsingGET1OK struct {
	Payload interface{}
}

func (o *GetVCenterUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/vCenter/{vCenterName}/query/{queryPattern}][%d] getVCenterUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetVCenterUsingGET1OK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetVCenterUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCenterUsingGET1Unauthorized creates a GetVCenterUsingGET1Unauthorized with default headers values
func NewGetVCenterUsingGET1Unauthorized() *GetVCenterUsingGET1Unauthorized {
	return &GetVCenterUsingGET1Unauthorized{}
}

/*GetVCenterUsingGET1Unauthorized handles this case with default header values.

Unauthorized
*/
type GetVCenterUsingGET1Unauthorized struct {
}

func (o *GetVCenterUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/vCenter/{vCenterName}/query/{queryPattern}][%d] getVCenterUsingGET1Unauthorized ", 401)
}

func (o *GetVCenterUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVCenterUsingGET1Forbidden creates a GetVCenterUsingGET1Forbidden with default headers values
func NewGetVCenterUsingGET1Forbidden() *GetVCenterUsingGET1Forbidden {
	return &GetVCenterUsingGET1Forbidden{}
}

/*GetVCenterUsingGET1Forbidden handles this case with default header values.

Forbidden
*/
type GetVCenterUsingGET1Forbidden struct {
}

func (o *GetVCenterUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/vCenter/{vCenterName}/query/{queryPattern}][%d] getVCenterUsingGET1Forbidden ", 403)
}

func (o *GetVCenterUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVCenterUsingGET1NotFound creates a GetVCenterUsingGET1NotFound with default headers values
func NewGetVCenterUsingGET1NotFound() *GetVCenterUsingGET1NotFound {
	return &GetVCenterUsingGET1NotFound{}
}

/*GetVCenterUsingGET1NotFound handles this case with default header values.

Not Found
*/
type GetVCenterUsingGET1NotFound struct {
}

func (o *GetVCenterUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/vCenter/{vCenterName}/query/{queryPattern}][%d] getVCenterUsingGET1NotFound ", 404)
}

func (o *GetVCenterUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
