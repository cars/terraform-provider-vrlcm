// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetVCenterUsingGETReader is a Reader for the GetVCenterUsingGET structure.
type GetVCenterUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVCenterUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVCenterUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVCenterUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVCenterUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVCenterUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVCenterUsingGETOK creates a GetVCenterUsingGETOK with default headers values
func NewGetVCenterUsingGETOK() *GetVCenterUsingGETOK {
	return &GetVCenterUsingGETOK{}
}

/*GetVCenterUsingGETOK handles this case with default header values.

OK
*/
type GetVCenterUsingGETOK struct {
	Payload *models.VCenter
}

func (o *GetVCenterUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters/{vCenterName}][%d] getVCenterUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetVCenterUsingGETOK) GetPayload() *models.VCenter {
	return o.Payload
}

func (o *GetVCenterUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VCenter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCenterUsingGETUnauthorized creates a GetVCenterUsingGETUnauthorized with default headers values
func NewGetVCenterUsingGETUnauthorized() *GetVCenterUsingGETUnauthorized {
	return &GetVCenterUsingGETUnauthorized{}
}

/*GetVCenterUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetVCenterUsingGETUnauthorized struct {
}

func (o *GetVCenterUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters/{vCenterName}][%d] getVCenterUsingGETUnauthorized ", 401)
}

func (o *GetVCenterUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVCenterUsingGETForbidden creates a GetVCenterUsingGETForbidden with default headers values
func NewGetVCenterUsingGETForbidden() *GetVCenterUsingGETForbidden {
	return &GetVCenterUsingGETForbidden{}
}

/*GetVCenterUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetVCenterUsingGETForbidden struct {
}

func (o *GetVCenterUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters/{vCenterName}][%d] getVCenterUsingGETForbidden ", 403)
}

func (o *GetVCenterUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVCenterUsingGETNotFound creates a GetVCenterUsingGETNotFound with default headers values
func NewGetVCenterUsingGETNotFound() *GetVCenterUsingGETNotFound {
	return &GetVCenterUsingGETNotFound{}
}

/*GetVCenterUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetVCenterUsingGETNotFound struct {
}

func (o *GetVCenterUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/regions/{regionName}/zones/{zoneName}/vCenters/{vCenterName}][%d] getVCenterUsingGETNotFound ", 404)
}

func (o *GetVCenterUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
