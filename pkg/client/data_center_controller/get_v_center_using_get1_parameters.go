// Code generated by go-swagger; DO NOT EDIT.

package data_center_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetVCenterUsingGET1Params creates a new GetVCenterUsingGET1Params object
// with the default values initialized.
func NewGetVCenterUsingGET1Params() *GetVCenterUsingGET1Params {
	var ()
	return &GetVCenterUsingGET1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVCenterUsingGET1ParamsWithTimeout creates a new GetVCenterUsingGET1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVCenterUsingGET1ParamsWithTimeout(timeout time.Duration) *GetVCenterUsingGET1Params {
	var ()
	return &GetVCenterUsingGET1Params{

		timeout: timeout,
	}
}

// NewGetVCenterUsingGET1ParamsWithContext creates a new GetVCenterUsingGET1Params object
// with the default values initialized, and the ability to set a context for a request
func NewGetVCenterUsingGET1ParamsWithContext(ctx context.Context) *GetVCenterUsingGET1Params {
	var ()
	return &GetVCenterUsingGET1Params{

		Context: ctx,
	}
}

// NewGetVCenterUsingGET1ParamsWithHTTPClient creates a new GetVCenterUsingGET1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVCenterUsingGET1ParamsWithHTTPClient(client *http.Client) *GetVCenterUsingGET1Params {
	var ()
	return &GetVCenterUsingGET1Params{
		HTTPClient: client,
	}
}

/*GetVCenterUsingGET1Params contains all the parameters to send to the API endpoint
for the get v center using g e t 1 operation typically these are written to a http.Request
*/
type GetVCenterUsingGET1Params struct {

	/*DataCenterName
	  dataCenterName

	*/
	DataCenterName string
	/*QueryPattern
	  queryPattern

	*/
	QueryPattern string
	/*VCenterName
	  vCenterName

	*/
	VCenterName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) WithTimeout(timeout time.Duration) *GetVCenterUsingGET1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) WithContext(ctx context.Context) *GetVCenterUsingGET1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) WithHTTPClient(client *http.Client) *GetVCenterUsingGET1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDataCenterName adds the dataCenterName to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) WithDataCenterName(dataCenterName string) *GetVCenterUsingGET1Params {
	o.SetDataCenterName(dataCenterName)
	return o
}

// SetDataCenterName adds the dataCenterName to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) SetDataCenterName(dataCenterName string) {
	o.DataCenterName = dataCenterName
}

// WithQueryPattern adds the queryPattern to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) WithQueryPattern(queryPattern string) *GetVCenterUsingGET1Params {
	o.SetQueryPattern(queryPattern)
	return o
}

// SetQueryPattern adds the queryPattern to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) SetQueryPattern(queryPattern string) {
	o.QueryPattern = queryPattern
}

// WithVCenterName adds the vCenterName to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) WithVCenterName(vCenterName string) *GetVCenterUsingGET1Params {
	o.SetVCenterName(vCenterName)
	return o
}

// SetVCenterName adds the vCenterName to the get v center using g e t 1 params
func (o *GetVCenterUsingGET1Params) SetVCenterName(vCenterName string) {
	o.VCenterName = vCenterName
}

// WriteToRequest writes these params to a swagger request
func (o *GetVCenterUsingGET1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param dataCenterName
	if err := r.SetPathParam("dataCenterName", o.DataCenterName); err != nil {
		return err
	}

	// path param queryPattern
	if err := r.SetPathParam("queryPattern", o.QueryPattern); err != nil {
		return err
	}

	// path param vCenterName
	if err := r.SetPathParam("vCenterName", o.VCenterName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
