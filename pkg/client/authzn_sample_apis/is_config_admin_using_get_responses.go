// Code generated by go-swagger; DO NOT EDIT.

package authzn_sample_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// IsConfigAdminUsingGETReader is a Reader for the IsConfigAdminUsingGET structure.
type IsConfigAdminUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IsConfigAdminUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIsConfigAdminUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIsConfigAdminUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIsConfigAdminUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIsConfigAdminUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewIsConfigAdminUsingGETOK creates a IsConfigAdminUsingGETOK with default headers values
func NewIsConfigAdminUsingGETOK() *IsConfigAdminUsingGETOK {
	return &IsConfigAdminUsingGETOK{}
}

/*IsConfigAdminUsingGETOK handles this case with default header values.

OK
*/
type IsConfigAdminUsingGETOK struct {
	Payload *models.AuthenticatedUserDTO
}

func (o *IsConfigAdminUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/configadmin][%d] isConfigAdminUsingGETOK  %+v", 200, o.Payload)
}

func (o *IsConfigAdminUsingGETOK) GetPayload() *models.AuthenticatedUserDTO {
	return o.Payload
}

func (o *IsConfigAdminUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticatedUserDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIsConfigAdminUsingGETUnauthorized creates a IsConfigAdminUsingGETUnauthorized with default headers values
func NewIsConfigAdminUsingGETUnauthorized() *IsConfigAdminUsingGETUnauthorized {
	return &IsConfigAdminUsingGETUnauthorized{}
}

/*IsConfigAdminUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type IsConfigAdminUsingGETUnauthorized struct {
}

func (o *IsConfigAdminUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/configadmin][%d] isConfigAdminUsingGETUnauthorized ", 401)
}

func (o *IsConfigAdminUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIsConfigAdminUsingGETForbidden creates a IsConfigAdminUsingGETForbidden with default headers values
func NewIsConfigAdminUsingGETForbidden() *IsConfigAdminUsingGETForbidden {
	return &IsConfigAdminUsingGETForbidden{}
}

/*IsConfigAdminUsingGETForbidden handles this case with default header values.

Forbidden
*/
type IsConfigAdminUsingGETForbidden struct {
}

func (o *IsConfigAdminUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/configadmin][%d] isConfigAdminUsingGETForbidden ", 403)
}

func (o *IsConfigAdminUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIsConfigAdminUsingGETNotFound creates a IsConfigAdminUsingGETNotFound with default headers values
func NewIsConfigAdminUsingGETNotFound() *IsConfigAdminUsingGETNotFound {
	return &IsConfigAdminUsingGETNotFound{}
}

/*IsConfigAdminUsingGETNotFound handles this case with default header values.

Not Found
*/
type IsConfigAdminUsingGETNotFound struct {
}

func (o *IsConfigAdminUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/configadmin][%d] isConfigAdminUsingGETNotFound ", 404)
}

func (o *IsConfigAdminUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
