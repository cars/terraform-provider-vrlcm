// Code generated by go-swagger; DO NOT EDIT.

package authzn_sample_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// IsSupportUserUsingGETReader is a Reader for the IsSupportUserUsingGET structure.
type IsSupportUserUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IsSupportUserUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIsSupportUserUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIsSupportUserUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIsSupportUserUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIsSupportUserUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewIsSupportUserUsingGETOK creates a IsSupportUserUsingGETOK with default headers values
func NewIsSupportUserUsingGETOK() *IsSupportUserUsingGETOK {
	return &IsSupportUserUsingGETOK{}
}

/*IsSupportUserUsingGETOK handles this case with default header values.

OK
*/
type IsSupportUserUsingGETOK struct {
	Payload *models.AuthenticatedUserDTO
}

func (o *IsSupportUserUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/supportuser][%d] isSupportUserUsingGETOK  %+v", 200, o.Payload)
}

func (o *IsSupportUserUsingGETOK) GetPayload() *models.AuthenticatedUserDTO {
	return o.Payload
}

func (o *IsSupportUserUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticatedUserDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIsSupportUserUsingGETUnauthorized creates a IsSupportUserUsingGETUnauthorized with default headers values
func NewIsSupportUserUsingGETUnauthorized() *IsSupportUserUsingGETUnauthorized {
	return &IsSupportUserUsingGETUnauthorized{}
}

/*IsSupportUserUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type IsSupportUserUsingGETUnauthorized struct {
}

func (o *IsSupportUserUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/supportuser][%d] isSupportUserUsingGETUnauthorized ", 401)
}

func (o *IsSupportUserUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIsSupportUserUsingGETForbidden creates a IsSupportUserUsingGETForbidden with default headers values
func NewIsSupportUserUsingGETForbidden() *IsSupportUserUsingGETForbidden {
	return &IsSupportUserUsingGETForbidden{}
}

/*IsSupportUserUsingGETForbidden handles this case with default header values.

Forbidden
*/
type IsSupportUserUsingGETForbidden struct {
}

func (o *IsSupportUserUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/supportuser][%d] isSupportUserUsingGETForbidden ", 403)
}

func (o *IsSupportUserUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewIsSupportUserUsingGETNotFound creates a IsSupportUserUsingGETNotFound with default headers values
func NewIsSupportUserUsingGETNotFound() *IsSupportUserUsingGETNotFound {
	return &IsSupportUserUsingGETNotFound{}
}

/*IsSupportUserUsingGETNotFound handles this case with default header values.

Not Found
*/
type IsSupportUserUsingGETNotFound struct {
}

func (o *IsSupportUserUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/restricted/supportuser][%d] isSupportUserUsingGETNotFound ", 404)
}

func (o *IsSupportUserUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
