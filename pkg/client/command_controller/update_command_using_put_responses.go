// Code generated by go-swagger; DO NOT EDIT.

package command_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// UpdateCommandUsingPUTReader is a Reader for the UpdateCommandUsingPUT structure.
type UpdateCommandUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCommandUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCommandUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateCommandUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateCommandUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCommandUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCommandUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCommandUsingPUTOK creates a UpdateCommandUsingPUTOK with default headers values
func NewUpdateCommandUsingPUTOK() *UpdateCommandUsingPUTOK {
	return &UpdateCommandUsingPUTOK{}
}

/*UpdateCommandUsingPUTOK handles this case with default header values.

OK
*/
type UpdateCommandUsingPUTOK struct {
	Payload *models.Status
}

func (o *UpdateCommandUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /command/update][%d] updateCommandUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateCommandUsingPUTOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *UpdateCommandUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCommandUsingPUTCreated creates a UpdateCommandUsingPUTCreated with default headers values
func NewUpdateCommandUsingPUTCreated() *UpdateCommandUsingPUTCreated {
	return &UpdateCommandUsingPUTCreated{}
}

/*UpdateCommandUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateCommandUsingPUTCreated struct {
}

func (o *UpdateCommandUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /command/update][%d] updateCommandUsingPUTCreated ", 201)
}

func (o *UpdateCommandUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCommandUsingPUTUnauthorized creates a UpdateCommandUsingPUTUnauthorized with default headers values
func NewUpdateCommandUsingPUTUnauthorized() *UpdateCommandUsingPUTUnauthorized {
	return &UpdateCommandUsingPUTUnauthorized{}
}

/*UpdateCommandUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateCommandUsingPUTUnauthorized struct {
}

func (o *UpdateCommandUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /command/update][%d] updateCommandUsingPUTUnauthorized ", 401)
}

func (o *UpdateCommandUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCommandUsingPUTForbidden creates a UpdateCommandUsingPUTForbidden with default headers values
func NewUpdateCommandUsingPUTForbidden() *UpdateCommandUsingPUTForbidden {
	return &UpdateCommandUsingPUTForbidden{}
}

/*UpdateCommandUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateCommandUsingPUTForbidden struct {
}

func (o *UpdateCommandUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /command/update][%d] updateCommandUsingPUTForbidden ", 403)
}

func (o *UpdateCommandUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCommandUsingPUTNotFound creates a UpdateCommandUsingPUTNotFound with default headers values
func NewUpdateCommandUsingPUTNotFound() *UpdateCommandUsingPUTNotFound {
	return &UpdateCommandUsingPUTNotFound{}
}

/*UpdateCommandUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateCommandUsingPUTNotFound struct {
}

func (o *UpdateCommandUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /command/update][%d] updateCommandUsingPUTNotFound ", 404)
}

func (o *UpdateCommandUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
