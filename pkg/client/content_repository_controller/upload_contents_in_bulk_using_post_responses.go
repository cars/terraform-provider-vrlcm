// Code generated by go-swagger; DO NOT EDIT.

package content_repository_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UploadContentsInBulkUsingPOSTReader is a Reader for the UploadContentsInBulkUsingPOST structure.
type UploadContentsInBulkUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadContentsInBulkUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadContentsInBulkUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUploadContentsInBulkUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUploadContentsInBulkUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadContentsInBulkUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadContentsInBulkUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadContentsInBulkUsingPOSTOK creates a UploadContentsInBulkUsingPOSTOK with default headers values
func NewUploadContentsInBulkUsingPOSTOK() *UploadContentsInBulkUsingPOSTOK {
	return &UploadContentsInBulkUsingPOSTOK{}
}

/*UploadContentsInBulkUsingPOSTOK handles this case with default header values.

OK
*/
type UploadContentsInBulkUsingPOSTOK struct {
	Payload string
}

func (o *UploadContentsInBulkUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content/upload/bulk][%d] uploadContentsInBulkUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *UploadContentsInBulkUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *UploadContentsInBulkUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadContentsInBulkUsingPOSTCreated creates a UploadContentsInBulkUsingPOSTCreated with default headers values
func NewUploadContentsInBulkUsingPOSTCreated() *UploadContentsInBulkUsingPOSTCreated {
	return &UploadContentsInBulkUsingPOSTCreated{}
}

/*UploadContentsInBulkUsingPOSTCreated handles this case with default header values.

Created
*/
type UploadContentsInBulkUsingPOSTCreated struct {
}

func (o *UploadContentsInBulkUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content/upload/bulk][%d] uploadContentsInBulkUsingPOSTCreated ", 201)
}

func (o *UploadContentsInBulkUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadContentsInBulkUsingPOSTUnauthorized creates a UploadContentsInBulkUsingPOSTUnauthorized with default headers values
func NewUploadContentsInBulkUsingPOSTUnauthorized() *UploadContentsInBulkUsingPOSTUnauthorized {
	return &UploadContentsInBulkUsingPOSTUnauthorized{}
}

/*UploadContentsInBulkUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type UploadContentsInBulkUsingPOSTUnauthorized struct {
}

func (o *UploadContentsInBulkUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content/upload/bulk][%d] uploadContentsInBulkUsingPOSTUnauthorized ", 401)
}

func (o *UploadContentsInBulkUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadContentsInBulkUsingPOSTForbidden creates a UploadContentsInBulkUsingPOSTForbidden with default headers values
func NewUploadContentsInBulkUsingPOSTForbidden() *UploadContentsInBulkUsingPOSTForbidden {
	return &UploadContentsInBulkUsingPOSTForbidden{}
}

/*UploadContentsInBulkUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type UploadContentsInBulkUsingPOSTForbidden struct {
}

func (o *UploadContentsInBulkUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content/upload/bulk][%d] uploadContentsInBulkUsingPOSTForbidden ", 403)
}

func (o *UploadContentsInBulkUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadContentsInBulkUsingPOSTNotFound creates a UploadContentsInBulkUsingPOSTNotFound with default headers values
func NewUploadContentsInBulkUsingPOSTNotFound() *UploadContentsInBulkUsingPOSTNotFound {
	return &UploadContentsInBulkUsingPOSTNotFound{}
}

/*UploadContentsInBulkUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type UploadContentsInBulkUsingPOSTNotFound struct {
}

func (o *UploadContentsInBulkUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content/upload/bulk][%d] uploadContentsInBulkUsingPOSTNotFound ", 404)
}

func (o *UploadContentsInBulkUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
