// Code generated by go-swagger; DO NOT EDIT.

package content_repository_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateRepositoryUsingPOSTReader is a Reader for the CreateRepositoryUsingPOST structure.
type CreateRepositoryUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepositoryUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRepositoryUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateRepositoryUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRepositoryUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRepositoryUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateRepositoryUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRepositoryUsingPOSTOK creates a CreateRepositoryUsingPOSTOK with default headers values
func NewCreateRepositoryUsingPOSTOK() *CreateRepositoryUsingPOSTOK {
	return &CreateRepositoryUsingPOSTOK{}
}

/*CreateRepositoryUsingPOSTOK handles this case with default header values.

OK
*/
type CreateRepositoryUsingPOSTOK struct {
	Payload string
}

func (o *CreateRepositoryUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/repository][%d] createRepositoryUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateRepositoryUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *CreateRepositoryUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRepositoryUsingPOSTCreated creates a CreateRepositoryUsingPOSTCreated with default headers values
func NewCreateRepositoryUsingPOSTCreated() *CreateRepositoryUsingPOSTCreated {
	return &CreateRepositoryUsingPOSTCreated{}
}

/*CreateRepositoryUsingPOSTCreated handles this case with default header values.

Created
*/
type CreateRepositoryUsingPOSTCreated struct {
}

func (o *CreateRepositoryUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/repository][%d] createRepositoryUsingPOSTCreated ", 201)
}

func (o *CreateRepositoryUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepositoryUsingPOSTUnauthorized creates a CreateRepositoryUsingPOSTUnauthorized with default headers values
func NewCreateRepositoryUsingPOSTUnauthorized() *CreateRepositoryUsingPOSTUnauthorized {
	return &CreateRepositoryUsingPOSTUnauthorized{}
}

/*CreateRepositoryUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateRepositoryUsingPOSTUnauthorized struct {
}

func (o *CreateRepositoryUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/repository][%d] createRepositoryUsingPOSTUnauthorized ", 401)
}

func (o *CreateRepositoryUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepositoryUsingPOSTForbidden creates a CreateRepositoryUsingPOSTForbidden with default headers values
func NewCreateRepositoryUsingPOSTForbidden() *CreateRepositoryUsingPOSTForbidden {
	return &CreateRepositoryUsingPOSTForbidden{}
}

/*CreateRepositoryUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateRepositoryUsingPOSTForbidden struct {
}

func (o *CreateRepositoryUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/repository][%d] createRepositoryUsingPOSTForbidden ", 403)
}

func (o *CreateRepositoryUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateRepositoryUsingPOSTNotFound creates a CreateRepositoryUsingPOSTNotFound with default headers values
func NewCreateRepositoryUsingPOSTNotFound() *CreateRepositoryUsingPOSTNotFound {
	return &CreateRepositoryUsingPOSTNotFound{}
}

/*CreateRepositoryUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type CreateRepositoryUsingPOSTNotFound struct {
}

func (o *CreateRepositoryUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/repository][%d] createRepositoryUsingPOSTNotFound ", 404)
}

func (o *CreateRepositoryUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
