// Code generated by go-swagger; DO NOT EDIT.

package content_repository_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteContentUsingDELETEReader is a Reader for the DeleteContentUsingDELETE structure.
type DeleteContentUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContentUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteContentUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteContentUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteContentUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteContentUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteContentUsingDELETEOK creates a DeleteContentUsingDELETEOK with default headers values
func NewDeleteContentUsingDELETEOK() *DeleteContentUsingDELETEOK {
	return &DeleteContentUsingDELETEOK{}
}

/*DeleteContentUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteContentUsingDELETEOK struct {
	Payload string
}

func (o *DeleteContentUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /lcm/crepo/api/content/delete][%d] deleteContentUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteContentUsingDELETEOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteContentUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContentUsingDELETENoContent creates a DeleteContentUsingDELETENoContent with default headers values
func NewDeleteContentUsingDELETENoContent() *DeleteContentUsingDELETENoContent {
	return &DeleteContentUsingDELETENoContent{}
}

/*DeleteContentUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteContentUsingDELETENoContent struct {
}

func (o *DeleteContentUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /lcm/crepo/api/content/delete][%d] deleteContentUsingDELETENoContent ", 204)
}

func (o *DeleteContentUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteContentUsingDELETEUnauthorized creates a DeleteContentUsingDELETEUnauthorized with default headers values
func NewDeleteContentUsingDELETEUnauthorized() *DeleteContentUsingDELETEUnauthorized {
	return &DeleteContentUsingDELETEUnauthorized{}
}

/*DeleteContentUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteContentUsingDELETEUnauthorized struct {
}

func (o *DeleteContentUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /lcm/crepo/api/content/delete][%d] deleteContentUsingDELETEUnauthorized ", 401)
}

func (o *DeleteContentUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteContentUsingDELETEForbidden creates a DeleteContentUsingDELETEForbidden with default headers values
func NewDeleteContentUsingDELETEForbidden() *DeleteContentUsingDELETEForbidden {
	return &DeleteContentUsingDELETEForbidden{}
}

/*DeleteContentUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteContentUsingDELETEForbidden struct {
}

func (o *DeleteContentUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /lcm/crepo/api/content/delete][%d] deleteContentUsingDELETEForbidden ", 403)
}

func (o *DeleteContentUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
