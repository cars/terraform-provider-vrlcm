// Code generated by go-swagger; DO NOT EDIT.

package content_repository_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateContentUsingPOSTReader is a Reader for the CreateContentUsingPOST structure.
type CreateContentUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateContentUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateContentUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateContentUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateContentUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateContentUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateContentUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateContentUsingPOSTOK creates a CreateContentUsingPOSTOK with default headers values
func NewCreateContentUsingPOSTOK() *CreateContentUsingPOSTOK {
	return &CreateContentUsingPOSTOK{}
}

/*CreateContentUsingPOSTOK handles this case with default header values.

OK
*/
type CreateContentUsingPOSTOK struct {
	Payload string
}

func (o *CreateContentUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content][%d] createContentUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateContentUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *CreateContentUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentUsingPOSTCreated creates a CreateContentUsingPOSTCreated with default headers values
func NewCreateContentUsingPOSTCreated() *CreateContentUsingPOSTCreated {
	return &CreateContentUsingPOSTCreated{}
}

/*CreateContentUsingPOSTCreated handles this case with default header values.

Created
*/
type CreateContentUsingPOSTCreated struct {
}

func (o *CreateContentUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content][%d] createContentUsingPOSTCreated ", 201)
}

func (o *CreateContentUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateContentUsingPOSTUnauthorized creates a CreateContentUsingPOSTUnauthorized with default headers values
func NewCreateContentUsingPOSTUnauthorized() *CreateContentUsingPOSTUnauthorized {
	return &CreateContentUsingPOSTUnauthorized{}
}

/*CreateContentUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateContentUsingPOSTUnauthorized struct {
}

func (o *CreateContentUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content][%d] createContentUsingPOSTUnauthorized ", 401)
}

func (o *CreateContentUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateContentUsingPOSTForbidden creates a CreateContentUsingPOSTForbidden with default headers values
func NewCreateContentUsingPOSTForbidden() *CreateContentUsingPOSTForbidden {
	return &CreateContentUsingPOSTForbidden{}
}

/*CreateContentUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateContentUsingPOSTForbidden struct {
}

func (o *CreateContentUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content][%d] createContentUsingPOSTForbidden ", 403)
}

func (o *CreateContentUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateContentUsingPOSTNotFound creates a CreateContentUsingPOSTNotFound with default headers values
func NewCreateContentUsingPOSTNotFound() *CreateContentUsingPOSTNotFound {
	return &CreateContentUsingPOSTNotFound{}
}

/*CreateContentUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type CreateContentUsingPOSTNotFound struct {
}

func (o *CreateContentUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/crepo/api/content][%d] createContentUsingPOSTNotFound ", 404)
}

func (o *CreateContentUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
