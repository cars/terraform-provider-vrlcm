// Code generated by go-swagger; DO NOT EDIT.

package content_repository_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetRepositoryByRepoNameUsingGETReader is a Reader for the GetRepositoryByRepoNameUsingGET structure.
type GetRepositoryByRepoNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoryByRepoNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoryByRepoNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRepositoryByRepoNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepositoryByRepoNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoryByRepoNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoryByRepoNameUsingGETOK creates a GetRepositoryByRepoNameUsingGETOK with default headers values
func NewGetRepositoryByRepoNameUsingGETOK() *GetRepositoryByRepoNameUsingGETOK {
	return &GetRepositoryByRepoNameUsingGETOK{}
}

/*GetRepositoryByRepoNameUsingGETOK handles this case with default header values.

OK
*/
type GetRepositoryByRepoNameUsingGETOK struct {
	Payload *models.RepositoryDTO
}

func (o *GetRepositoryByRepoNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/crepo/api/repository/{repoName}][%d] getRepositoryByRepoNameUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetRepositoryByRepoNameUsingGETOK) GetPayload() *models.RepositoryDTO {
	return o.Payload
}

func (o *GetRepositoryByRepoNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RepositoryDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoryByRepoNameUsingGETUnauthorized creates a GetRepositoryByRepoNameUsingGETUnauthorized with default headers values
func NewGetRepositoryByRepoNameUsingGETUnauthorized() *GetRepositoryByRepoNameUsingGETUnauthorized {
	return &GetRepositoryByRepoNameUsingGETUnauthorized{}
}

/*GetRepositoryByRepoNameUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetRepositoryByRepoNameUsingGETUnauthorized struct {
}

func (o *GetRepositoryByRepoNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/crepo/api/repository/{repoName}][%d] getRepositoryByRepoNameUsingGETUnauthorized ", 401)
}

func (o *GetRepositoryByRepoNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryByRepoNameUsingGETForbidden creates a GetRepositoryByRepoNameUsingGETForbidden with default headers values
func NewGetRepositoryByRepoNameUsingGETForbidden() *GetRepositoryByRepoNameUsingGETForbidden {
	return &GetRepositoryByRepoNameUsingGETForbidden{}
}

/*GetRepositoryByRepoNameUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetRepositoryByRepoNameUsingGETForbidden struct {
}

func (o *GetRepositoryByRepoNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/crepo/api/repository/{repoName}][%d] getRepositoryByRepoNameUsingGETForbidden ", 403)
}

func (o *GetRepositoryByRepoNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryByRepoNameUsingGETNotFound creates a GetRepositoryByRepoNameUsingGETNotFound with default headers values
func NewGetRepositoryByRepoNameUsingGETNotFound() *GetRepositoryByRepoNameUsingGETNotFound {
	return &GetRepositoryByRepoNameUsingGETNotFound{}
}

/*GetRepositoryByRepoNameUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetRepositoryByRepoNameUsingGETNotFound struct {
}

func (o *GetRepositoryByRepoNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/crepo/api/repository/{repoName}][%d] getRepositoryByRepoNameUsingGETNotFound ", 404)
}

func (o *GetRepositoryByRepoNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
