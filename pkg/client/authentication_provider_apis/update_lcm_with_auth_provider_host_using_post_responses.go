// Code generated by go-swagger; DO NOT EDIT.

package authentication_provider_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateLcmWithAuthProviderHostUsingPOSTReader is a Reader for the UpdateLcmWithAuthProviderHostUsingPOST structure.
type UpdateLcmWithAuthProviderHostUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLcmWithAuthProviderHostUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLcmWithAuthProviderHostUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateLcmWithAuthProviderHostUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateLcmWithAuthProviderHostUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLcmWithAuthProviderHostUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLcmWithAuthProviderHostUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateLcmWithAuthProviderHostUsingPOSTOK creates a UpdateLcmWithAuthProviderHostUsingPOSTOK with default headers values
func NewUpdateLcmWithAuthProviderHostUsingPOSTOK() *UpdateLcmWithAuthProviderHostUsingPOSTOK {
	return &UpdateLcmWithAuthProviderHostUsingPOSTOK{}
}

/*UpdateLcmWithAuthProviderHostUsingPOSTOK handles this case with default header values.

OK
*/
type UpdateLcmWithAuthProviderHostUsingPOSTOK struct {
	Payload interface{}
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updproviderhostwithlcm][%d] updateLcmWithAuthProviderHostUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLcmWithAuthProviderHostUsingPOSTCreated creates a UpdateLcmWithAuthProviderHostUsingPOSTCreated with default headers values
func NewUpdateLcmWithAuthProviderHostUsingPOSTCreated() *UpdateLcmWithAuthProviderHostUsingPOSTCreated {
	return &UpdateLcmWithAuthProviderHostUsingPOSTCreated{}
}

/*UpdateLcmWithAuthProviderHostUsingPOSTCreated handles this case with default header values.

Created
*/
type UpdateLcmWithAuthProviderHostUsingPOSTCreated struct {
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updproviderhostwithlcm][%d] updateLcmWithAuthProviderHostUsingPOSTCreated ", 201)
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLcmWithAuthProviderHostUsingPOSTUnauthorized creates a UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized with default headers values
func NewUpdateLcmWithAuthProviderHostUsingPOSTUnauthorized() *UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized {
	return &UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized{}
}

/*UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized struct {
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updproviderhostwithlcm][%d] updateLcmWithAuthProviderHostUsingPOSTUnauthorized ", 401)
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLcmWithAuthProviderHostUsingPOSTForbidden creates a UpdateLcmWithAuthProviderHostUsingPOSTForbidden with default headers values
func NewUpdateLcmWithAuthProviderHostUsingPOSTForbidden() *UpdateLcmWithAuthProviderHostUsingPOSTForbidden {
	return &UpdateLcmWithAuthProviderHostUsingPOSTForbidden{}
}

/*UpdateLcmWithAuthProviderHostUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type UpdateLcmWithAuthProviderHostUsingPOSTForbidden struct {
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updproviderhostwithlcm][%d] updateLcmWithAuthProviderHostUsingPOSTForbidden ", 403)
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLcmWithAuthProviderHostUsingPOSTNotFound creates a UpdateLcmWithAuthProviderHostUsingPOSTNotFound with default headers values
func NewUpdateLcmWithAuthProviderHostUsingPOSTNotFound() *UpdateLcmWithAuthProviderHostUsingPOSTNotFound {
	return &UpdateLcmWithAuthProviderHostUsingPOSTNotFound{}
}

/*UpdateLcmWithAuthProviderHostUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type UpdateLcmWithAuthProviderHostUsingPOSTNotFound struct {
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updproviderhostwithlcm][%d] updateLcmWithAuthProviderHostUsingPOSTNotFound ", 404)
}

func (o *UpdateLcmWithAuthProviderHostUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
