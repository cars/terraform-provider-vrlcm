// Code generated by go-swagger; DO NOT EDIT.

package authentication_provider_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateLcmHostWithAuthProviderUsingPOSTReader is a Reader for the UpdateLcmHostWithAuthProviderUsingPOST structure.
type UpdateLcmHostWithAuthProviderUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLcmHostWithAuthProviderUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLcmHostWithAuthProviderUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateLcmHostWithAuthProviderUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateLcmHostWithAuthProviderUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLcmHostWithAuthProviderUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLcmHostWithAuthProviderUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateLcmHostWithAuthProviderUsingPOSTOK creates a UpdateLcmHostWithAuthProviderUsingPOSTOK with default headers values
func NewUpdateLcmHostWithAuthProviderUsingPOSTOK() *UpdateLcmHostWithAuthProviderUsingPOSTOK {
	return &UpdateLcmHostWithAuthProviderUsingPOSTOK{}
}

/*UpdateLcmHostWithAuthProviderUsingPOSTOK handles this case with default header values.

OK
*/
type UpdateLcmHostWithAuthProviderUsingPOSTOK struct {
	Payload interface{}
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updlcmhostwithprovider][%d] updateLcmHostWithAuthProviderUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLcmHostWithAuthProviderUsingPOSTCreated creates a UpdateLcmHostWithAuthProviderUsingPOSTCreated with default headers values
func NewUpdateLcmHostWithAuthProviderUsingPOSTCreated() *UpdateLcmHostWithAuthProviderUsingPOSTCreated {
	return &UpdateLcmHostWithAuthProviderUsingPOSTCreated{}
}

/*UpdateLcmHostWithAuthProviderUsingPOSTCreated handles this case with default header values.

Created
*/
type UpdateLcmHostWithAuthProviderUsingPOSTCreated struct {
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updlcmhostwithprovider][%d] updateLcmHostWithAuthProviderUsingPOSTCreated ", 201)
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLcmHostWithAuthProviderUsingPOSTUnauthorized creates a UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized with default headers values
func NewUpdateLcmHostWithAuthProviderUsingPOSTUnauthorized() *UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized {
	return &UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized{}
}

/*UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized struct {
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updlcmhostwithprovider][%d] updateLcmHostWithAuthProviderUsingPOSTUnauthorized ", 401)
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLcmHostWithAuthProviderUsingPOSTForbidden creates a UpdateLcmHostWithAuthProviderUsingPOSTForbidden with default headers values
func NewUpdateLcmHostWithAuthProviderUsingPOSTForbidden() *UpdateLcmHostWithAuthProviderUsingPOSTForbidden {
	return &UpdateLcmHostWithAuthProviderUsingPOSTForbidden{}
}

/*UpdateLcmHostWithAuthProviderUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type UpdateLcmHostWithAuthProviderUsingPOSTForbidden struct {
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updlcmhostwithprovider][%d] updateLcmHostWithAuthProviderUsingPOSTForbidden ", 403)
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLcmHostWithAuthProviderUsingPOSTNotFound creates a UpdateLcmHostWithAuthProviderUsingPOSTNotFound with default headers values
func NewUpdateLcmHostWithAuthProviderUsingPOSTNotFound() *UpdateLcmHostWithAuthProviderUsingPOSTNotFound {
	return &UpdateLcmHostWithAuthProviderUsingPOSTNotFound{}
}

/*UpdateLcmHostWithAuthProviderUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type UpdateLcmHostWithAuthProviderUsingPOSTNotFound struct {
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/updlcmhostwithprovider][%d] updateLcmHostWithAuthProviderUsingPOSTNotFound ", 404)
}

func (o *UpdateLcmHostWithAuthProviderUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
