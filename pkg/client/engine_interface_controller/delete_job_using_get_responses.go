// Code generated by go-swagger; DO NOT EDIT.

package engine_interface_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteJobUsingGETReader is a Reader for the DeleteJobUsingGET structure.
type DeleteJobUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteJobUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteJobUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteJobUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteJobUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteJobUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteJobUsingGETOK creates a DeleteJobUsingGETOK with default headers values
func NewDeleteJobUsingGETOK() *DeleteJobUsingGETOK {
	return &DeleteJobUsingGETOK{}
}

/*DeleteJobUsingGETOK handles this case with default header values.

OK
*/
type DeleteJobUsingGETOK struct {
}

func (o *DeleteJobUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/statemachine/deletestatemachinerequest/{vmid}][%d] deleteJobUsingGETOK ", 200)
}

func (o *DeleteJobUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteJobUsingGETUnauthorized creates a DeleteJobUsingGETUnauthorized with default headers values
func NewDeleteJobUsingGETUnauthorized() *DeleteJobUsingGETUnauthorized {
	return &DeleteJobUsingGETUnauthorized{}
}

/*DeleteJobUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteJobUsingGETUnauthorized struct {
}

func (o *DeleteJobUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/statemachine/deletestatemachinerequest/{vmid}][%d] deleteJobUsingGETUnauthorized ", 401)
}

func (o *DeleteJobUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteJobUsingGETForbidden creates a DeleteJobUsingGETForbidden with default headers values
func NewDeleteJobUsingGETForbidden() *DeleteJobUsingGETForbidden {
	return &DeleteJobUsingGETForbidden{}
}

/*DeleteJobUsingGETForbidden handles this case with default header values.

Forbidden
*/
type DeleteJobUsingGETForbidden struct {
}

func (o *DeleteJobUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/statemachine/deletestatemachinerequest/{vmid}][%d] deleteJobUsingGETForbidden ", 403)
}

func (o *DeleteJobUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteJobUsingGETNotFound creates a DeleteJobUsingGETNotFound with default headers values
func NewDeleteJobUsingGETNotFound() *DeleteJobUsingGETNotFound {
	return &DeleteJobUsingGETNotFound{}
}

/*DeleteJobUsingGETNotFound handles this case with default header values.

Not Found
*/
type DeleteJobUsingGETNotFound struct {
}

func (o *DeleteJobUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/statemachine/deletestatemachinerequest/{vmid}][%d] deleteJobUsingGETNotFound ", 404)
}

func (o *DeleteJobUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
