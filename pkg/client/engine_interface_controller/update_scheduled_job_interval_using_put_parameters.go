// Code generated by go-swagger; DO NOT EDIT.

package engine_interface_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// NewUpdateScheduledJobIntervalUsingPUTParams creates a new UpdateScheduledJobIntervalUsingPUTParams object
// with the default values initialized.
func NewUpdateScheduledJobIntervalUsingPUTParams() *UpdateScheduledJobIntervalUsingPUTParams {
	var ()
	return &UpdateScheduledJobIntervalUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateScheduledJobIntervalUsingPUTParamsWithTimeout creates a new UpdateScheduledJobIntervalUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateScheduledJobIntervalUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateScheduledJobIntervalUsingPUTParams {
	var ()
	return &UpdateScheduledJobIntervalUsingPUTParams{

		timeout: timeout,
	}
}

// NewUpdateScheduledJobIntervalUsingPUTParamsWithContext creates a new UpdateScheduledJobIntervalUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateScheduledJobIntervalUsingPUTParamsWithContext(ctx context.Context) *UpdateScheduledJobIntervalUsingPUTParams {
	var ()
	return &UpdateScheduledJobIntervalUsingPUTParams{

		Context: ctx,
	}
}

// NewUpdateScheduledJobIntervalUsingPUTParamsWithHTTPClient creates a new UpdateScheduledJobIntervalUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateScheduledJobIntervalUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateScheduledJobIntervalUsingPUTParams {
	var ()
	return &UpdateScheduledJobIntervalUsingPUTParams{
		HTTPClient: client,
	}
}

/*UpdateScheduledJobIntervalUsingPUTParams contains all the parameters to send to the API endpoint
for the update scheduled job interval using p u t operation typically these are written to a http.Request
*/
type UpdateScheduledJobIntervalUsingPUTParams struct {

	/*ScheduledEngineRequestDTO
	  scheduledEngineRequestDTO

	*/
	ScheduledEngineRequestDTO *models.ScheduledEngineRequestDTO
	/*Vmid
	  vmid

	*/
	Vmid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateScheduledJobIntervalUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) WithContext(ctx context.Context) *UpdateScheduledJobIntervalUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateScheduledJobIntervalUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithScheduledEngineRequestDTO adds the scheduledEngineRequestDTO to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) WithScheduledEngineRequestDTO(scheduledEngineRequestDTO *models.ScheduledEngineRequestDTO) *UpdateScheduledJobIntervalUsingPUTParams {
	o.SetScheduledEngineRequestDTO(scheduledEngineRequestDTO)
	return o
}

// SetScheduledEngineRequestDTO adds the scheduledEngineRequestDTO to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) SetScheduledEngineRequestDTO(scheduledEngineRequestDTO *models.ScheduledEngineRequestDTO) {
	o.ScheduledEngineRequestDTO = scheduledEngineRequestDTO
}

// WithVmid adds the vmid to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) WithVmid(vmid string) *UpdateScheduledJobIntervalUsingPUTParams {
	o.SetVmid(vmid)
	return o
}

// SetVmid adds the vmid to the update scheduled job interval using p u t params
func (o *UpdateScheduledJobIntervalUsingPUTParams) SetVmid(vmid string) {
	o.Vmid = vmid
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateScheduledJobIntervalUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ScheduledEngineRequestDTO != nil {
		if err := r.SetBodyParam(o.ScheduledEngineRequestDTO); err != nil {
			return err
		}
	}

	// path param vmid
	if err := r.SetPathParam("vmid", o.Vmid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
