// Code generated by go-swagger; DO NOT EDIT.

package engine_interface_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllJobsUsingGETReader is a Reader for the GetAllJobsUsingGET structure.
type GetAllJobsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllJobsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllJobsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllJobsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllJobsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllJobsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllJobsUsingGETOK creates a GetAllJobsUsingGETOK with default headers values
func NewGetAllJobsUsingGETOK() *GetAllJobsUsingGETOK {
	return &GetAllJobsUsingGETOK{}
}

/*GetAllJobsUsingGETOK handles this case with default header values.

OK
*/
type GetAllJobsUsingGETOK struct {
	Payload []string
}

func (o *GetAllJobsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/job][%d] getAllJobsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllJobsUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAllJobsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllJobsUsingGETUnauthorized creates a GetAllJobsUsingGETUnauthorized with default headers values
func NewGetAllJobsUsingGETUnauthorized() *GetAllJobsUsingGETUnauthorized {
	return &GetAllJobsUsingGETUnauthorized{}
}

/*GetAllJobsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllJobsUsingGETUnauthorized struct {
}

func (o *GetAllJobsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/job][%d] getAllJobsUsingGETUnauthorized ", 401)
}

func (o *GetAllJobsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllJobsUsingGETForbidden creates a GetAllJobsUsingGETForbidden with default headers values
func NewGetAllJobsUsingGETForbidden() *GetAllJobsUsingGETForbidden {
	return &GetAllJobsUsingGETForbidden{}
}

/*GetAllJobsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllJobsUsingGETForbidden struct {
}

func (o *GetAllJobsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/job][%d] getAllJobsUsingGETForbidden ", 403)
}

func (o *GetAllJobsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllJobsUsingGETNotFound creates a GetAllJobsUsingGETNotFound with default headers values
func NewGetAllJobsUsingGETNotFound() *GetAllJobsUsingGETNotFound {
	return &GetAllJobsUsingGETNotFound{}
}

/*GetAllJobsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllJobsUsingGETNotFound struct {
}

func (o *GetAllJobsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/automata/api/engine/job][%d] getAllJobsUsingGETNotFound ", 404)
}

func (o *GetAllJobsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
