// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllUsersUsingGETReader is a Reader for the GetAllUsersUsingGET structure.
type GetAllUsersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUsersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUsersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUsersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllUsersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUsersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllUsersUsingGETOK creates a GetAllUsersUsingGETOK with default headers values
func NewGetAllUsersUsingGETOK() *GetAllUsersUsingGETOK {
	return &GetAllUsersUsingGETOK{}
}

/*GetAllUsersUsingGETOK handles this case with default header values.

OK
*/
type GetAllUsersUsingGETOK struct {
	Payload interface{}
}

func (o *GetAllUsersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users][%d] getAllUsersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllUsersUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllUsersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsersUsingGETUnauthorized creates a GetAllUsersUsingGETUnauthorized with default headers values
func NewGetAllUsersUsingGETUnauthorized() *GetAllUsersUsingGETUnauthorized {
	return &GetAllUsersUsingGETUnauthorized{}
}

/*GetAllUsersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllUsersUsingGETUnauthorized struct {
}

func (o *GetAllUsersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users][%d] getAllUsersUsingGETUnauthorized ", 401)
}

func (o *GetAllUsersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsersUsingGETForbidden creates a GetAllUsersUsingGETForbidden with default headers values
func NewGetAllUsersUsingGETForbidden() *GetAllUsersUsingGETForbidden {
	return &GetAllUsersUsingGETForbidden{}
}

/*GetAllUsersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllUsersUsingGETForbidden struct {
}

func (o *GetAllUsersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users][%d] getAllUsersUsingGETForbidden ", 403)
}

func (o *GetAllUsersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsersUsingGETNotFound creates a GetAllUsersUsingGETNotFound with default headers values
func NewGetAllUsersUsingGETNotFound() *GetAllUsersUsingGETNotFound {
	return &GetAllUsersUsingGETNotFound{}
}

/*GetAllUsersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllUsersUsingGETNotFound struct {
}

func (o *GetAllUsersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users][%d] getAllUsersUsingGETNotFound ", 404)
}

func (o *GetAllUsersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
