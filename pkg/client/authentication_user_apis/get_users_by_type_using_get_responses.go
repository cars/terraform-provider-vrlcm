// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetUsersByTypeUsingGETReader is a Reader for the GetUsersByTypeUsingGET structure.
type GetUsersByTypeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersByTypeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersByTypeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersByTypeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersByTypeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersByTypeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersByTypeUsingGETOK creates a GetUsersByTypeUsingGETOK with default headers values
func NewGetUsersByTypeUsingGETOK() *GetUsersByTypeUsingGETOK {
	return &GetUsersByTypeUsingGETOK{}
}

/*GetUsersByTypeUsingGETOK handles this case with default header values.

OK
*/
type GetUsersByTypeUsingGETOK struct {
	Payload interface{}
}

func (o *GetUsersByTypeUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/type/{userType}][%d] getUsersByTypeUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUsersByTypeUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUsersByTypeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByTypeUsingGETUnauthorized creates a GetUsersByTypeUsingGETUnauthorized with default headers values
func NewGetUsersByTypeUsingGETUnauthorized() *GetUsersByTypeUsingGETUnauthorized {
	return &GetUsersByTypeUsingGETUnauthorized{}
}

/*GetUsersByTypeUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUsersByTypeUsingGETUnauthorized struct {
}

func (o *GetUsersByTypeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/type/{userType}][%d] getUsersByTypeUsingGETUnauthorized ", 401)
}

func (o *GetUsersByTypeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByTypeUsingGETForbidden creates a GetUsersByTypeUsingGETForbidden with default headers values
func NewGetUsersByTypeUsingGETForbidden() *GetUsersByTypeUsingGETForbidden {
	return &GetUsersByTypeUsingGETForbidden{}
}

/*GetUsersByTypeUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUsersByTypeUsingGETForbidden struct {
}

func (o *GetUsersByTypeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/type/{userType}][%d] getUsersByTypeUsingGETForbidden ", 403)
}

func (o *GetUsersByTypeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByTypeUsingGETNotFound creates a GetUsersByTypeUsingGETNotFound with default headers values
func NewGetUsersByTypeUsingGETNotFound() *GetUsersByTypeUsingGETNotFound {
	return &GetUsersByTypeUsingGETNotFound{}
}

/*GetUsersByTypeUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUsersByTypeUsingGETNotFound struct {
}

func (o *GetUsersByTypeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/type/{userType}][%d] getUsersByTypeUsingGETNotFound ", 404)
}

func (o *GetUsersByTypeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
