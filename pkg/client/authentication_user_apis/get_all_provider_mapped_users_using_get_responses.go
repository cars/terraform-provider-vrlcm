// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllProviderMappedUsersUsingGETReader is a Reader for the GetAllProviderMappedUsersUsingGET structure.
type GetAllProviderMappedUsersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllProviderMappedUsersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllProviderMappedUsersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllProviderMappedUsersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllProviderMappedUsersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllProviderMappedUsersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllProviderMappedUsersUsingGETOK creates a GetAllProviderMappedUsersUsingGETOK with default headers values
func NewGetAllProviderMappedUsersUsingGETOK() *GetAllProviderMappedUsersUsingGETOK {
	return &GetAllProviderMappedUsersUsingGETOK{}
}

/*GetAllProviderMappedUsersUsingGETOK handles this case with default header values.

OK
*/
type GetAllProviderMappedUsersUsingGETOK struct {
	Payload interface{}
}

func (o *GetAllProviderMappedUsersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/fromprovider][%d] getAllProviderMappedUsersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllProviderMappedUsersUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllProviderMappedUsersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllProviderMappedUsersUsingGETUnauthorized creates a GetAllProviderMappedUsersUsingGETUnauthorized with default headers values
func NewGetAllProviderMappedUsersUsingGETUnauthorized() *GetAllProviderMappedUsersUsingGETUnauthorized {
	return &GetAllProviderMappedUsersUsingGETUnauthorized{}
}

/*GetAllProviderMappedUsersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllProviderMappedUsersUsingGETUnauthorized struct {
}

func (o *GetAllProviderMappedUsersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/fromprovider][%d] getAllProviderMappedUsersUsingGETUnauthorized ", 401)
}

func (o *GetAllProviderMappedUsersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllProviderMappedUsersUsingGETForbidden creates a GetAllProviderMappedUsersUsingGETForbidden with default headers values
func NewGetAllProviderMappedUsersUsingGETForbidden() *GetAllProviderMappedUsersUsingGETForbidden {
	return &GetAllProviderMappedUsersUsingGETForbidden{}
}

/*GetAllProviderMappedUsersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllProviderMappedUsersUsingGETForbidden struct {
}

func (o *GetAllProviderMappedUsersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/fromprovider][%d] getAllProviderMappedUsersUsingGETForbidden ", 403)
}

func (o *GetAllProviderMappedUsersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllProviderMappedUsersUsingGETNotFound creates a GetAllProviderMappedUsersUsingGETNotFound with default headers values
func NewGetAllProviderMappedUsersUsingGETNotFound() *GetAllProviderMappedUsersUsingGETNotFound {
	return &GetAllProviderMappedUsersUsingGETNotFound{}
}

/*GetAllProviderMappedUsersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllProviderMappedUsersUsingGETNotFound struct {
}

func (o *GetAllProviderMappedUsersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/fromprovider][%d] getAllProviderMappedUsersUsingGETNotFound ", 404)
}

func (o *GetAllProviderMappedUsersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
