// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetUsersByNameUsingGETReader is a Reader for the GetUsersByNameUsingGET structure.
type GetUsersByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersByNameUsingGETOK creates a GetUsersByNameUsingGETOK with default headers values
func NewGetUsersByNameUsingGETOK() *GetUsersByNameUsingGETOK {
	return &GetUsersByNameUsingGETOK{}
}

/*GetUsersByNameUsingGETOK handles this case with default header values.

OK
*/
type GetUsersByNameUsingGETOK struct {
	Payload interface{}
}

func (o *GetUsersByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}][%d] getUsersByNameUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUsersByNameUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUsersByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByNameUsingGETUnauthorized creates a GetUsersByNameUsingGETUnauthorized with default headers values
func NewGetUsersByNameUsingGETUnauthorized() *GetUsersByNameUsingGETUnauthorized {
	return &GetUsersByNameUsingGETUnauthorized{}
}

/*GetUsersByNameUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUsersByNameUsingGETUnauthorized struct {
}

func (o *GetUsersByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}][%d] getUsersByNameUsingGETUnauthorized ", 401)
}

func (o *GetUsersByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByNameUsingGETForbidden creates a GetUsersByNameUsingGETForbidden with default headers values
func NewGetUsersByNameUsingGETForbidden() *GetUsersByNameUsingGETForbidden {
	return &GetUsersByNameUsingGETForbidden{}
}

/*GetUsersByNameUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUsersByNameUsingGETForbidden struct {
}

func (o *GetUsersByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}][%d] getUsersByNameUsingGETForbidden ", 403)
}

func (o *GetUsersByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByNameUsingGETNotFound creates a GetUsersByNameUsingGETNotFound with default headers values
func NewGetUsersByNameUsingGETNotFound() *GetUsersByNameUsingGETNotFound {
	return &GetUsersByNameUsingGETNotFound{}
}

/*GetUsersByNameUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUsersByNameUsingGETNotFound struct {
}

func (o *GetUsersByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}][%d] getUsersByNameUsingGETNotFound ", 404)
}

func (o *GetUsersByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
