// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUsersByUserNameAndDomainUsingGETParams creates a new GetUsersByUserNameAndDomainUsingGETParams object
// with the default values initialized.
func NewGetUsersByUserNameAndDomainUsingGETParams() *GetUsersByUserNameAndDomainUsingGETParams {
	var ()
	return &GetUsersByUserNameAndDomainUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetUsersByUserNameAndDomainUsingGETParamsWithTimeout creates a new GetUsersByUserNameAndDomainUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetUsersByUserNameAndDomainUsingGETParamsWithTimeout(timeout time.Duration) *GetUsersByUserNameAndDomainUsingGETParams {
	var ()
	return &GetUsersByUserNameAndDomainUsingGETParams{

		timeout: timeout,
	}
}

// NewGetUsersByUserNameAndDomainUsingGETParamsWithContext creates a new GetUsersByUserNameAndDomainUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetUsersByUserNameAndDomainUsingGETParamsWithContext(ctx context.Context) *GetUsersByUserNameAndDomainUsingGETParams {
	var ()
	return &GetUsersByUserNameAndDomainUsingGETParams{

		Context: ctx,
	}
}

// NewGetUsersByUserNameAndDomainUsingGETParamsWithHTTPClient creates a new GetUsersByUserNameAndDomainUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetUsersByUserNameAndDomainUsingGETParamsWithHTTPClient(client *http.Client) *GetUsersByUserNameAndDomainUsingGETParams {
	var ()
	return &GetUsersByUserNameAndDomainUsingGETParams{
		HTTPClient: client,
	}
}

/*GetUsersByUserNameAndDomainUsingGETParams contains all the parameters to send to the API endpoint
for the get users by user name and domain using g e t operation typically these are written to a http.Request
*/
type GetUsersByUserNameAndDomainUsingGETParams struct {

	/*Domain
	  domain

	*/
	Domain string
	/*Username
	  username

	*/
	Username string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) WithTimeout(timeout time.Duration) *GetUsersByUserNameAndDomainUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) WithContext(ctx context.Context) *GetUsersByUserNameAndDomainUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) WithHTTPClient(client *http.Client) *GetUsersByUserNameAndDomainUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDomain adds the domain to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) WithDomain(domain string) *GetUsersByUserNameAndDomainUsingGETParams {
	o.SetDomain(domain)
	return o
}

// SetDomain adds the domain to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) SetDomain(domain string) {
	o.Domain = domain
}

// WithUsername adds the username to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) WithUsername(username string) *GetUsersByUserNameAndDomainUsingGETParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the get users by user name and domain using g e t params
func (o *GetUsersByUserNameAndDomainUsingGETParams) SetUsername(username string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *GetUsersByUserNameAndDomainUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param domain
	if err := r.SetPathParam("domain", o.Domain); err != nil {
		return err
	}

	// path param username
	if err := r.SetPathParam("username", o.Username); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
