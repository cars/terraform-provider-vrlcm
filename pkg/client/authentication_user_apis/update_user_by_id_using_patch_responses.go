// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateUserByIDUsingPATCHReader is a Reader for the UpdateUserByIDUsingPATCH structure.
type UpdateUserByIDUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserByIDUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserByIDUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateUserByIDUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUserByIDUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserByIDUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateUserByIDUsingPATCHOK creates a UpdateUserByIDUsingPATCHOK with default headers values
func NewUpdateUserByIDUsingPATCHOK() *UpdateUserByIDUsingPATCHOK {
	return &UpdateUserByIDUsingPATCHOK{}
}

/*UpdateUserByIDUsingPATCHOK handles this case with default header values.

OK
*/
type UpdateUserByIDUsingPATCHOK struct {
	Payload interface{}
}

func (o *UpdateUserByIDUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/users/{vmid}][%d] updateUserByIdUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *UpdateUserByIDUsingPATCHOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateUserByIDUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserByIDUsingPATCHNoContent creates a UpdateUserByIDUsingPATCHNoContent with default headers values
func NewUpdateUserByIDUsingPATCHNoContent() *UpdateUserByIDUsingPATCHNoContent {
	return &UpdateUserByIDUsingPATCHNoContent{}
}

/*UpdateUserByIDUsingPATCHNoContent handles this case with default header values.

No Content
*/
type UpdateUserByIDUsingPATCHNoContent struct {
}

func (o *UpdateUserByIDUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/users/{vmid}][%d] updateUserByIdUsingPATCHNoContent ", 204)
}

func (o *UpdateUserByIDUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserByIDUsingPATCHUnauthorized creates a UpdateUserByIDUsingPATCHUnauthorized with default headers values
func NewUpdateUserByIDUsingPATCHUnauthorized() *UpdateUserByIDUsingPATCHUnauthorized {
	return &UpdateUserByIDUsingPATCHUnauthorized{}
}

/*UpdateUserByIDUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateUserByIDUsingPATCHUnauthorized struct {
}

func (o *UpdateUserByIDUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/users/{vmid}][%d] updateUserByIdUsingPATCHUnauthorized ", 401)
}

func (o *UpdateUserByIDUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserByIDUsingPATCHForbidden creates a UpdateUserByIDUsingPATCHForbidden with default headers values
func NewUpdateUserByIDUsingPATCHForbidden() *UpdateUserByIDUsingPATCHForbidden {
	return &UpdateUserByIDUsingPATCHForbidden{}
}

/*UpdateUserByIDUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type UpdateUserByIDUsingPATCHForbidden struct {
}

func (o *UpdateUserByIDUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/users/{vmid}][%d] updateUserByIdUsingPATCHForbidden ", 403)
}

func (o *UpdateUserByIDUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
