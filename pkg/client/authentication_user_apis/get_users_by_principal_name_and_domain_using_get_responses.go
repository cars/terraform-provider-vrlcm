// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetUsersByPrincipalNameAndDomainUsingGETReader is a Reader for the GetUsersByPrincipalNameAndDomainUsingGET structure.
type GetUsersByPrincipalNameAndDomainUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersByPrincipalNameAndDomainUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersByPrincipalNameAndDomainUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersByPrincipalNameAndDomainUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersByPrincipalNameAndDomainUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersByPrincipalNameAndDomainUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersByPrincipalNameAndDomainUsingGETOK creates a GetUsersByPrincipalNameAndDomainUsingGETOK with default headers values
func NewGetUsersByPrincipalNameAndDomainUsingGETOK() *GetUsersByPrincipalNameAndDomainUsingGETOK {
	return &GetUsersByPrincipalNameAndDomainUsingGETOK{}
}

/*GetUsersByPrincipalNameAndDomainUsingGETOK handles this case with default header values.

OK
*/
type GetUsersByPrincipalNameAndDomainUsingGETOK struct {
	Payload interface{}
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/upn/{upn}/domain/{domain}][%d] getUsersByPrincipalNameAndDomainUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByPrincipalNameAndDomainUsingGETUnauthorized creates a GetUsersByPrincipalNameAndDomainUsingGETUnauthorized with default headers values
func NewGetUsersByPrincipalNameAndDomainUsingGETUnauthorized() *GetUsersByPrincipalNameAndDomainUsingGETUnauthorized {
	return &GetUsersByPrincipalNameAndDomainUsingGETUnauthorized{}
}

/*GetUsersByPrincipalNameAndDomainUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUsersByPrincipalNameAndDomainUsingGETUnauthorized struct {
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/upn/{upn}/domain/{domain}][%d] getUsersByPrincipalNameAndDomainUsingGETUnauthorized ", 401)
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByPrincipalNameAndDomainUsingGETForbidden creates a GetUsersByPrincipalNameAndDomainUsingGETForbidden with default headers values
func NewGetUsersByPrincipalNameAndDomainUsingGETForbidden() *GetUsersByPrincipalNameAndDomainUsingGETForbidden {
	return &GetUsersByPrincipalNameAndDomainUsingGETForbidden{}
}

/*GetUsersByPrincipalNameAndDomainUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUsersByPrincipalNameAndDomainUsingGETForbidden struct {
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/upn/{upn}/domain/{domain}][%d] getUsersByPrincipalNameAndDomainUsingGETForbidden ", 403)
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByPrincipalNameAndDomainUsingGETNotFound creates a GetUsersByPrincipalNameAndDomainUsingGETNotFound with default headers values
func NewGetUsersByPrincipalNameAndDomainUsingGETNotFound() *GetUsersByPrincipalNameAndDomainUsingGETNotFound {
	return &GetUsersByPrincipalNameAndDomainUsingGETNotFound{}
}

/*GetUsersByPrincipalNameAndDomainUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUsersByPrincipalNameAndDomainUsingGETNotFound struct {
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/upn/{upn}/domain/{domain}][%d] getUsersByPrincipalNameAndDomainUsingGETNotFound ", 404)
}

func (o *GetUsersByPrincipalNameAndDomainUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
