// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetUsersByUserNameAndDomainUsingGETReader is a Reader for the GetUsersByUserNameAndDomainUsingGET structure.
type GetUsersByUserNameAndDomainUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersByUserNameAndDomainUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersByUserNameAndDomainUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersByUserNameAndDomainUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersByUserNameAndDomainUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersByUserNameAndDomainUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersByUserNameAndDomainUsingGETOK creates a GetUsersByUserNameAndDomainUsingGETOK with default headers values
func NewGetUsersByUserNameAndDomainUsingGETOK() *GetUsersByUserNameAndDomainUsingGETOK {
	return &GetUsersByUserNameAndDomainUsingGETOK{}
}

/*GetUsersByUserNameAndDomainUsingGETOK handles this case with default header values.

OK
*/
type GetUsersByUserNameAndDomainUsingGETOK struct {
	Payload interface{}
}

func (o *GetUsersByUserNameAndDomainUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}/domain/{domain}][%d] getUsersByUserNameAndDomainUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUsersByUserNameAndDomainUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUsersByUserNameAndDomainUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByUserNameAndDomainUsingGETUnauthorized creates a GetUsersByUserNameAndDomainUsingGETUnauthorized with default headers values
func NewGetUsersByUserNameAndDomainUsingGETUnauthorized() *GetUsersByUserNameAndDomainUsingGETUnauthorized {
	return &GetUsersByUserNameAndDomainUsingGETUnauthorized{}
}

/*GetUsersByUserNameAndDomainUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUsersByUserNameAndDomainUsingGETUnauthorized struct {
}

func (o *GetUsersByUserNameAndDomainUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}/domain/{domain}][%d] getUsersByUserNameAndDomainUsingGETUnauthorized ", 401)
}

func (o *GetUsersByUserNameAndDomainUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByUserNameAndDomainUsingGETForbidden creates a GetUsersByUserNameAndDomainUsingGETForbidden with default headers values
func NewGetUsersByUserNameAndDomainUsingGETForbidden() *GetUsersByUserNameAndDomainUsingGETForbidden {
	return &GetUsersByUserNameAndDomainUsingGETForbidden{}
}

/*GetUsersByUserNameAndDomainUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUsersByUserNameAndDomainUsingGETForbidden struct {
}

func (o *GetUsersByUserNameAndDomainUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}/domain/{domain}][%d] getUsersByUserNameAndDomainUsingGETForbidden ", 403)
}

func (o *GetUsersByUserNameAndDomainUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByUserNameAndDomainUsingGETNotFound creates a GetUsersByUserNameAndDomainUsingGETNotFound with default headers values
func NewGetUsersByUserNameAndDomainUsingGETNotFound() *GetUsersByUserNameAndDomainUsingGETNotFound {
	return &GetUsersByUserNameAndDomainUsingGETNotFound{}
}

/*GetUsersByUserNameAndDomainUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUsersByUserNameAndDomainUsingGETNotFound struct {
}

func (o *GetUsersByUserNameAndDomainUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/name/{username}/domain/{domain}][%d] getUsersByUserNameAndDomainUsingGETNotFound ", 404)
}

func (o *GetUsersByUserNameAndDomainUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
