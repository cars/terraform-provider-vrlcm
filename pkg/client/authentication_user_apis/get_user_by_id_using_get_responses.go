// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetUserByIDUsingGETReader is a Reader for the GetUserByIDUsingGET structure.
type GetUserByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserByIDUsingGETOK creates a GetUserByIDUsingGETOK with default headers values
func NewGetUserByIDUsingGETOK() *GetUserByIDUsingGETOK {
	return &GetUserByIDUsingGETOK{}
}

/*GetUserByIDUsingGETOK handles this case with default header values.

OK
*/
type GetUserByIDUsingGETOK struct {
	Payload interface{}
}

func (o *GetUserByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/{vmid}][%d] getUserByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUserByIDUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUserByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDUsingGETUnauthorized creates a GetUserByIDUsingGETUnauthorized with default headers values
func NewGetUserByIDUsingGETUnauthorized() *GetUserByIDUsingGETUnauthorized {
	return &GetUserByIDUsingGETUnauthorized{}
}

/*GetUserByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUserByIDUsingGETUnauthorized struct {
}

func (o *GetUserByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/{vmid}][%d] getUserByIdUsingGETUnauthorized ", 401)
}

func (o *GetUserByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserByIDUsingGETForbidden creates a GetUserByIDUsingGETForbidden with default headers values
func NewGetUserByIDUsingGETForbidden() *GetUserByIDUsingGETForbidden {
	return &GetUserByIDUsingGETForbidden{}
}

/*GetUserByIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUserByIDUsingGETForbidden struct {
}

func (o *GetUserByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/{vmid}][%d] getUserByIdUsingGETForbidden ", 403)
}

func (o *GetUserByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserByIDUsingGETNotFound creates a GetUserByIDUsingGETNotFound with default headers values
func NewGetUserByIDUsingGETNotFound() *GetUserByIDUsingGETNotFound {
	return &GetUserByIDUsingGETNotFound{}
}

/*GetUserByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUserByIDUsingGETNotFound struct {
}

func (o *GetUserByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/users/{vmid}][%d] getUserByIdUsingGETNotFound ", 404)
}

func (o *GetUserByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
