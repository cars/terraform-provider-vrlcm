// Code generated by go-swagger; DO NOT EDIT.

package authentication_user_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateLocalUserPasswordUsingPUTReader is a Reader for the UpdateLocalUserPasswordUsingPUT structure.
type UpdateLocalUserPasswordUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLocalUserPasswordUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLocalUserPasswordUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateLocalUserPasswordUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateLocalUserPasswordUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLocalUserPasswordUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLocalUserPasswordUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateLocalUserPasswordUsingPUTOK creates a UpdateLocalUserPasswordUsingPUTOK with default headers values
func NewUpdateLocalUserPasswordUsingPUTOK() *UpdateLocalUserPasswordUsingPUTOK {
	return &UpdateLocalUserPasswordUsingPUTOK{}
}

/*UpdateLocalUserPasswordUsingPUTOK handles this case with default header values.

OK
*/
type UpdateLocalUserPasswordUsingPUTOK struct {
	Payload interface{}
}

func (o *UpdateLocalUserPasswordUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/users/updatepassword][%d] updateLocalUserPasswordUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateLocalUserPasswordUsingPUTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateLocalUserPasswordUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserPasswordUsingPUTCreated creates a UpdateLocalUserPasswordUsingPUTCreated with default headers values
func NewUpdateLocalUserPasswordUsingPUTCreated() *UpdateLocalUserPasswordUsingPUTCreated {
	return &UpdateLocalUserPasswordUsingPUTCreated{}
}

/*UpdateLocalUserPasswordUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateLocalUserPasswordUsingPUTCreated struct {
}

func (o *UpdateLocalUserPasswordUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/users/updatepassword][%d] updateLocalUserPasswordUsingPUTCreated ", 201)
}

func (o *UpdateLocalUserPasswordUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLocalUserPasswordUsingPUTUnauthorized creates a UpdateLocalUserPasswordUsingPUTUnauthorized with default headers values
func NewUpdateLocalUserPasswordUsingPUTUnauthorized() *UpdateLocalUserPasswordUsingPUTUnauthorized {
	return &UpdateLocalUserPasswordUsingPUTUnauthorized{}
}

/*UpdateLocalUserPasswordUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateLocalUserPasswordUsingPUTUnauthorized struct {
}

func (o *UpdateLocalUserPasswordUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/users/updatepassword][%d] updateLocalUserPasswordUsingPUTUnauthorized ", 401)
}

func (o *UpdateLocalUserPasswordUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLocalUserPasswordUsingPUTForbidden creates a UpdateLocalUserPasswordUsingPUTForbidden with default headers values
func NewUpdateLocalUserPasswordUsingPUTForbidden() *UpdateLocalUserPasswordUsingPUTForbidden {
	return &UpdateLocalUserPasswordUsingPUTForbidden{}
}

/*UpdateLocalUserPasswordUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateLocalUserPasswordUsingPUTForbidden struct {
}

func (o *UpdateLocalUserPasswordUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/users/updatepassword][%d] updateLocalUserPasswordUsingPUTForbidden ", 403)
}

func (o *UpdateLocalUserPasswordUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLocalUserPasswordUsingPUTNotFound creates a UpdateLocalUserPasswordUsingPUTNotFound with default headers values
func NewUpdateLocalUserPasswordUsingPUTNotFound() *UpdateLocalUserPasswordUsingPUTNotFound {
	return &UpdateLocalUserPasswordUsingPUTNotFound{}
}

/*UpdateLocalUserPasswordUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateLocalUserPasswordUsingPUTNotFound struct {
}

func (o *UpdateLocalUserPasswordUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/users/updatepassword][%d] updateLocalUserPasswordUsingPUTNotFound ", 404)
}

func (o *UpdateLocalUserPasswordUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
