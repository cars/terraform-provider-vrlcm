// Code generated by go-swagger; DO NOT EDIT.

package configuration_parameter_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetConfigByNameUsingGETReader is a Reader for the GetConfigByNameUsingGET structure.
type GetConfigByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetConfigByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConfigByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConfigByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConfigByNameUsingGETOK creates a GetConfigByNameUsingGETOK with default headers values
func NewGetConfigByNameUsingGETOK() *GetConfigByNameUsingGETOK {
	return &GetConfigByNameUsingGETOK{}
}

/*GetConfigByNameUsingGETOK handles this case with default header values.

OK
*/
type GetConfigByNameUsingGETOK struct {
	Payload interface{}
}

func (o *GetConfigByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/configparams/{name}][%d] getConfigByNameUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetConfigByNameUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConfigByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigByNameUsingGETUnauthorized creates a GetConfigByNameUsingGETUnauthorized with default headers values
func NewGetConfigByNameUsingGETUnauthorized() *GetConfigByNameUsingGETUnauthorized {
	return &GetConfigByNameUsingGETUnauthorized{}
}

/*GetConfigByNameUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetConfigByNameUsingGETUnauthorized struct {
}

func (o *GetConfigByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/configparams/{name}][%d] getConfigByNameUsingGETUnauthorized ", 401)
}

func (o *GetConfigByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConfigByNameUsingGETForbidden creates a GetConfigByNameUsingGETForbidden with default headers values
func NewGetConfigByNameUsingGETForbidden() *GetConfigByNameUsingGETForbidden {
	return &GetConfigByNameUsingGETForbidden{}
}

/*GetConfigByNameUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetConfigByNameUsingGETForbidden struct {
}

func (o *GetConfigByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/configparams/{name}][%d] getConfigByNameUsingGETForbidden ", 403)
}

func (o *GetConfigByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConfigByNameUsingGETNotFound creates a GetConfigByNameUsingGETNotFound with default headers values
func NewGetConfigByNameUsingGETNotFound() *GetConfigByNameUsingGETNotFound {
	return &GetConfigByNameUsingGETNotFound{}
}

/*GetConfigByNameUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetConfigByNameUsingGETNotFound struct {
}

func (o *GetConfigByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/configparams/{name}][%d] getConfigByNameUsingGETNotFound ", 404)
}

func (o *GetConfigByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
