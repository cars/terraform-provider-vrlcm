// Code generated by go-swagger; DO NOT EDIT.

package blackstone_proxy_service_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RedirectUsingPOSTReader is a Reader for the RedirectUsingPOST structure.
type RedirectUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedirectUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedirectUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRedirectUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRedirectUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRedirectUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRedirectUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRedirectUsingPOSTOK creates a RedirectUsingPOSTOK with default headers values
func NewRedirectUsingPOSTOK() *RedirectUsingPOSTOK {
	return &RedirectUsingPOSTOK{}
}

/*RedirectUsingPOSTOK handles this case with default header values.

OK
*/
type RedirectUsingPOSTOK struct {
	Payload string
}

func (o *RedirectUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/cms/api/**][%d] redirectUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *RedirectUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *RedirectUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRedirectUsingPOSTCreated creates a RedirectUsingPOSTCreated with default headers values
func NewRedirectUsingPOSTCreated() *RedirectUsingPOSTCreated {
	return &RedirectUsingPOSTCreated{}
}

/*RedirectUsingPOSTCreated handles this case with default header values.

Created
*/
type RedirectUsingPOSTCreated struct {
}

func (o *RedirectUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/cms/api/**][%d] redirectUsingPOSTCreated ", 201)
}

func (o *RedirectUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingPOSTUnauthorized creates a RedirectUsingPOSTUnauthorized with default headers values
func NewRedirectUsingPOSTUnauthorized() *RedirectUsingPOSTUnauthorized {
	return &RedirectUsingPOSTUnauthorized{}
}

/*RedirectUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type RedirectUsingPOSTUnauthorized struct {
}

func (o *RedirectUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/cms/api/**][%d] redirectUsingPOSTUnauthorized ", 401)
}

func (o *RedirectUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingPOSTForbidden creates a RedirectUsingPOSTForbidden with default headers values
func NewRedirectUsingPOSTForbidden() *RedirectUsingPOSTForbidden {
	return &RedirectUsingPOSTForbidden{}
}

/*RedirectUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type RedirectUsingPOSTForbidden struct {
}

func (o *RedirectUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/cms/api/**][%d] redirectUsingPOSTForbidden ", 403)
}

func (o *RedirectUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingPOSTNotFound creates a RedirectUsingPOSTNotFound with default headers values
func NewRedirectUsingPOSTNotFound() *RedirectUsingPOSTNotFound {
	return &RedirectUsingPOSTNotFound{}
}

/*RedirectUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type RedirectUsingPOSTNotFound struct {
}

func (o *RedirectUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/cms/api/**][%d] redirectUsingPOSTNotFound ", 404)
}

func (o *RedirectUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
