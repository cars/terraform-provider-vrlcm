// Code generated by go-swagger; DO NOT EDIT.

package blackstone_proxy_service_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RedirectUsingOPTIONSReader is a Reader for the RedirectUsingOPTIONS structure.
type RedirectUsingOPTIONSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedirectUsingOPTIONSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedirectUsingOPTIONSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRedirectUsingOPTIONSNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRedirectUsingOPTIONSUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRedirectUsingOPTIONSForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRedirectUsingOPTIONSOK creates a RedirectUsingOPTIONSOK with default headers values
func NewRedirectUsingOPTIONSOK() *RedirectUsingOPTIONSOK {
	return &RedirectUsingOPTIONSOK{}
}

/*RedirectUsingOPTIONSOK handles this case with default header values.

OK
*/
type RedirectUsingOPTIONSOK struct {
	Payload string
}

func (o *RedirectUsingOPTIONSOK) Error() string {
	return fmt.Sprintf("[OPTIONS /lcm/cms/api/**][%d] redirectUsingOPTIONSOK  %+v", 200, o.Payload)
}

func (o *RedirectUsingOPTIONSOK) GetPayload() string {
	return o.Payload
}

func (o *RedirectUsingOPTIONSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRedirectUsingOPTIONSNoContent creates a RedirectUsingOPTIONSNoContent with default headers values
func NewRedirectUsingOPTIONSNoContent() *RedirectUsingOPTIONSNoContent {
	return &RedirectUsingOPTIONSNoContent{}
}

/*RedirectUsingOPTIONSNoContent handles this case with default header values.

No Content
*/
type RedirectUsingOPTIONSNoContent struct {
}

func (o *RedirectUsingOPTIONSNoContent) Error() string {
	return fmt.Sprintf("[OPTIONS /lcm/cms/api/**][%d] redirectUsingOPTIONSNoContent ", 204)
}

func (o *RedirectUsingOPTIONSNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingOPTIONSUnauthorized creates a RedirectUsingOPTIONSUnauthorized with default headers values
func NewRedirectUsingOPTIONSUnauthorized() *RedirectUsingOPTIONSUnauthorized {
	return &RedirectUsingOPTIONSUnauthorized{}
}

/*RedirectUsingOPTIONSUnauthorized handles this case with default header values.

Unauthorized
*/
type RedirectUsingOPTIONSUnauthorized struct {
}

func (o *RedirectUsingOPTIONSUnauthorized) Error() string {
	return fmt.Sprintf("[OPTIONS /lcm/cms/api/**][%d] redirectUsingOPTIONSUnauthorized ", 401)
}

func (o *RedirectUsingOPTIONSUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingOPTIONSForbidden creates a RedirectUsingOPTIONSForbidden with default headers values
func NewRedirectUsingOPTIONSForbidden() *RedirectUsingOPTIONSForbidden {
	return &RedirectUsingOPTIONSForbidden{}
}

/*RedirectUsingOPTIONSForbidden handles this case with default header values.

Forbidden
*/
type RedirectUsingOPTIONSForbidden struct {
}

func (o *RedirectUsingOPTIONSForbidden) Error() string {
	return fmt.Sprintf("[OPTIONS /lcm/cms/api/**][%d] redirectUsingOPTIONSForbidden ", 403)
}

func (o *RedirectUsingOPTIONSForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
