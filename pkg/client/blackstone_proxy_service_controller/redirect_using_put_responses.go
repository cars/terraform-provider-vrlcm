// Code generated by go-swagger; DO NOT EDIT.

package blackstone_proxy_service_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RedirectUsingPUTReader is a Reader for the RedirectUsingPUT structure.
type RedirectUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedirectUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedirectUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRedirectUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRedirectUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRedirectUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRedirectUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRedirectUsingPUTOK creates a RedirectUsingPUTOK with default headers values
func NewRedirectUsingPUTOK() *RedirectUsingPUTOK {
	return &RedirectUsingPUTOK{}
}

/*RedirectUsingPUTOK handles this case with default header values.

OK
*/
type RedirectUsingPUTOK struct {
	Payload string
}

func (o *RedirectUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /lcm/cms/api/**][%d] redirectUsingPUTOK  %+v", 200, o.Payload)
}

func (o *RedirectUsingPUTOK) GetPayload() string {
	return o.Payload
}

func (o *RedirectUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRedirectUsingPUTCreated creates a RedirectUsingPUTCreated with default headers values
func NewRedirectUsingPUTCreated() *RedirectUsingPUTCreated {
	return &RedirectUsingPUTCreated{}
}

/*RedirectUsingPUTCreated handles this case with default header values.

Created
*/
type RedirectUsingPUTCreated struct {
}

func (o *RedirectUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /lcm/cms/api/**][%d] redirectUsingPUTCreated ", 201)
}

func (o *RedirectUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingPUTUnauthorized creates a RedirectUsingPUTUnauthorized with default headers values
func NewRedirectUsingPUTUnauthorized() *RedirectUsingPUTUnauthorized {
	return &RedirectUsingPUTUnauthorized{}
}

/*RedirectUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type RedirectUsingPUTUnauthorized struct {
}

func (o *RedirectUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /lcm/cms/api/**][%d] redirectUsingPUTUnauthorized ", 401)
}

func (o *RedirectUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingPUTForbidden creates a RedirectUsingPUTForbidden with default headers values
func NewRedirectUsingPUTForbidden() *RedirectUsingPUTForbidden {
	return &RedirectUsingPUTForbidden{}
}

/*RedirectUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type RedirectUsingPUTForbidden struct {
}

func (o *RedirectUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /lcm/cms/api/**][%d] redirectUsingPUTForbidden ", 403)
}

func (o *RedirectUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectUsingPUTNotFound creates a RedirectUsingPUTNotFound with default headers values
func NewRedirectUsingPUTNotFound() *RedirectUsingPUTNotFound {
	return &RedirectUsingPUTNotFound{}
}

/*RedirectUsingPUTNotFound handles this case with default header values.

Not Found
*/
type RedirectUsingPUTNotFound struct {
}

func (o *RedirectUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /lcm/cms/api/**][%d] redirectUsingPUTNotFound ", 404)
}

func (o *RedirectUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
