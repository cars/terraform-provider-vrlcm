// Code generated by go-swagger; DO NOT EDIT.

package authentication_group_role_mapping_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGroupRoleMappingGivenGroupIDUsingGETReader is a Reader for the GetGroupRoleMappingGivenGroupIDUsingGET structure.
type GetGroupRoleMappingGivenGroupIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupRoleMappingGivenGroupIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupRoleMappingGivenGroupIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupRoleMappingGivenGroupIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupRoleMappingGivenGroupIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupRoleMappingGivenGroupIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupRoleMappingGivenGroupIDUsingGETOK creates a GetGroupRoleMappingGivenGroupIDUsingGETOK with default headers values
func NewGetGroupRoleMappingGivenGroupIDUsingGETOK() *GetGroupRoleMappingGivenGroupIDUsingGETOK {
	return &GetGroupRoleMappingGivenGroupIDUsingGETOK{}
}

/*GetGroupRoleMappingGivenGroupIDUsingGETOK handles this case with default header values.

OK
*/
type GetGroupRoleMappingGivenGroupIDUsingGETOK struct {
	Payload interface{}
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/grouprolemapping/groupId/{groupvmid}][%d] getGroupRoleMappingGivenGroupIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupRoleMappingGivenGroupIDUsingGETUnauthorized creates a GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized with default headers values
func NewGetGroupRoleMappingGivenGroupIDUsingGETUnauthorized() *GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized {
	return &GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized{}
}

/*GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized struct {
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/grouprolemapping/groupId/{groupvmid}][%d] getGroupRoleMappingGivenGroupIdUsingGETUnauthorized ", 401)
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupRoleMappingGivenGroupIDUsingGETForbidden creates a GetGroupRoleMappingGivenGroupIDUsingGETForbidden with default headers values
func NewGetGroupRoleMappingGivenGroupIDUsingGETForbidden() *GetGroupRoleMappingGivenGroupIDUsingGETForbidden {
	return &GetGroupRoleMappingGivenGroupIDUsingGETForbidden{}
}

/*GetGroupRoleMappingGivenGroupIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetGroupRoleMappingGivenGroupIDUsingGETForbidden struct {
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/grouprolemapping/groupId/{groupvmid}][%d] getGroupRoleMappingGivenGroupIdUsingGETForbidden ", 403)
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupRoleMappingGivenGroupIDUsingGETNotFound creates a GetGroupRoleMappingGivenGroupIDUsingGETNotFound with default headers values
func NewGetGroupRoleMappingGivenGroupIDUsingGETNotFound() *GetGroupRoleMappingGivenGroupIDUsingGETNotFound {
	return &GetGroupRoleMappingGivenGroupIDUsingGETNotFound{}
}

/*GetGroupRoleMappingGivenGroupIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetGroupRoleMappingGivenGroupIDUsingGETNotFound struct {
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/grouprolemapping/groupId/{groupvmid}][%d] getGroupRoleMappingGivenGroupIdUsingGETNotFound ", 404)
}

func (o *GetGroupRoleMappingGivenGroupIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
