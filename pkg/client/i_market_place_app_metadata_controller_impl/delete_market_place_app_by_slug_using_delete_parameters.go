// Code generated by go-swagger; DO NOT EDIT.

package i_market_place_app_metadata_controller_impl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteMarketPlaceAppBySlugUsingDELETEParams creates a new DeleteMarketPlaceAppBySlugUsingDELETEParams object
// with the default values initialized.
func NewDeleteMarketPlaceAppBySlugUsingDELETEParams() *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	var (
		isFullDeleteDefault = string("false")
	)
	return &DeleteMarketPlaceAppBySlugUsingDELETEParams{
		IsFullDelete: &isFullDeleteDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMarketPlaceAppBySlugUsingDELETEParamsWithTimeout creates a new DeleteMarketPlaceAppBySlugUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteMarketPlaceAppBySlugUsingDELETEParamsWithTimeout(timeout time.Duration) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	var (
		isFullDeleteDefault = string("false")
	)
	return &DeleteMarketPlaceAppBySlugUsingDELETEParams{
		IsFullDelete: &isFullDeleteDefault,

		timeout: timeout,
	}
}

// NewDeleteMarketPlaceAppBySlugUsingDELETEParamsWithContext creates a new DeleteMarketPlaceAppBySlugUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteMarketPlaceAppBySlugUsingDELETEParamsWithContext(ctx context.Context) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	var (
		isFullDeleteDefault = string("false")
	)
	return &DeleteMarketPlaceAppBySlugUsingDELETEParams{
		IsFullDelete: &isFullDeleteDefault,

		Context: ctx,
	}
}

// NewDeleteMarketPlaceAppBySlugUsingDELETEParamsWithHTTPClient creates a new DeleteMarketPlaceAppBySlugUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteMarketPlaceAppBySlugUsingDELETEParamsWithHTTPClient(client *http.Client) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	var (
		isFullDeleteDefault = string("false")
	)
	return &DeleteMarketPlaceAppBySlugUsingDELETEParams{
		IsFullDelete: &isFullDeleteDefault,
		HTTPClient:   client,
	}
}

/*DeleteMarketPlaceAppBySlugUsingDELETEParams contains all the parameters to send to the API endpoint
for the delete market place app by slug using d e l e t e operation typically these are written to a http.Request
*/
type DeleteMarketPlaceAppBySlugUsingDELETEParams struct {

	/*IsFullDelete
	  isFullDelete

	*/
	IsFullDelete *string
	/*Slug
	  slug

	*/
	Slug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) WithTimeout(timeout time.Duration) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) WithContext(ctx context.Context) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) WithHTTPClient(client *http.Client) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIsFullDelete adds the isFullDelete to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) WithIsFullDelete(isFullDelete *string) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	o.SetIsFullDelete(isFullDelete)
	return o
}

// SetIsFullDelete adds the isFullDelete to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) SetIsFullDelete(isFullDelete *string) {
	o.IsFullDelete = isFullDelete
}

// WithSlug adds the slug to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) WithSlug(slug string) *DeleteMarketPlaceAppBySlugUsingDELETEParams {
	o.SetSlug(slug)
	return o
}

// SetSlug adds the slug to the delete market place app by slug using d e l e t e params
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) SetSlug(slug string) {
	o.Slug = slug
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMarketPlaceAppBySlugUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IsFullDelete != nil {

		// query param isFullDelete
		var qrIsFullDelete string
		if o.IsFullDelete != nil {
			qrIsFullDelete = *o.IsFullDelete
		}
		qIsFullDelete := qrIsFullDelete
		if qIsFullDelete != "" {
			if err := r.SetQueryParam("isFullDelete", qIsFullDelete); err != nil {
				return err
			}
		}

	}

	// path param slug
	if err := r.SetPathParam("slug", o.Slug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
