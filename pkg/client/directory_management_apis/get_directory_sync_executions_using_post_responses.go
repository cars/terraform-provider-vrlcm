// Code generated by go-swagger; DO NOT EDIT.

package directory_management_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetDirectorySyncExecutionsUsingPOSTReader is a Reader for the GetDirectorySyncExecutionsUsingPOST structure.
type GetDirectorySyncExecutionsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDirectorySyncExecutionsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDirectorySyncExecutionsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewGetDirectorySyncExecutionsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDirectorySyncExecutionsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDirectorySyncExecutionsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDirectorySyncExecutionsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDirectorySyncExecutionsUsingPOSTOK creates a GetDirectorySyncExecutionsUsingPOSTOK with default headers values
func NewGetDirectorySyncExecutionsUsingPOSTOK() *GetDirectorySyncExecutionsUsingPOSTOK {
	return &GetDirectorySyncExecutionsUsingPOSTOK{}
}

/*GetDirectorySyncExecutionsUsingPOSTOK handles this case with default header values.

OK
*/
type GetDirectorySyncExecutionsUsingPOSTOK struct {
	Payload interface{}
}

func (o *GetDirectorySyncExecutionsUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/get/synclogs][%d] getDirectorySyncExecutionsUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GetDirectorySyncExecutionsUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetDirectorySyncExecutionsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDirectorySyncExecutionsUsingPOSTCreated creates a GetDirectorySyncExecutionsUsingPOSTCreated with default headers values
func NewGetDirectorySyncExecutionsUsingPOSTCreated() *GetDirectorySyncExecutionsUsingPOSTCreated {
	return &GetDirectorySyncExecutionsUsingPOSTCreated{}
}

/*GetDirectorySyncExecutionsUsingPOSTCreated handles this case with default header values.

Created
*/
type GetDirectorySyncExecutionsUsingPOSTCreated struct {
}

func (o *GetDirectorySyncExecutionsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/get/synclogs][%d] getDirectorySyncExecutionsUsingPOSTCreated ", 201)
}

func (o *GetDirectorySyncExecutionsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDirectorySyncExecutionsUsingPOSTUnauthorized creates a GetDirectorySyncExecutionsUsingPOSTUnauthorized with default headers values
func NewGetDirectorySyncExecutionsUsingPOSTUnauthorized() *GetDirectorySyncExecutionsUsingPOSTUnauthorized {
	return &GetDirectorySyncExecutionsUsingPOSTUnauthorized{}
}

/*GetDirectorySyncExecutionsUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDirectorySyncExecutionsUsingPOSTUnauthorized struct {
}

func (o *GetDirectorySyncExecutionsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/get/synclogs][%d] getDirectorySyncExecutionsUsingPOSTUnauthorized ", 401)
}

func (o *GetDirectorySyncExecutionsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDirectorySyncExecutionsUsingPOSTForbidden creates a GetDirectorySyncExecutionsUsingPOSTForbidden with default headers values
func NewGetDirectorySyncExecutionsUsingPOSTForbidden() *GetDirectorySyncExecutionsUsingPOSTForbidden {
	return &GetDirectorySyncExecutionsUsingPOSTForbidden{}
}

/*GetDirectorySyncExecutionsUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type GetDirectorySyncExecutionsUsingPOSTForbidden struct {
}

func (o *GetDirectorySyncExecutionsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/get/synclogs][%d] getDirectorySyncExecutionsUsingPOSTForbidden ", 403)
}

func (o *GetDirectorySyncExecutionsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDirectorySyncExecutionsUsingPOSTNotFound creates a GetDirectorySyncExecutionsUsingPOSTNotFound with default headers values
func NewGetDirectorySyncExecutionsUsingPOSTNotFound() *GetDirectorySyncExecutionsUsingPOSTNotFound {
	return &GetDirectorySyncExecutionsUsingPOSTNotFound{}
}

/*GetDirectorySyncExecutionsUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type GetDirectorySyncExecutionsUsingPOSTNotFound struct {
}

func (o *GetDirectorySyncExecutionsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/get/synclogs][%d] getDirectorySyncExecutionsUsingPOSTNotFound ", 404)
}

func (o *GetDirectorySyncExecutionsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
