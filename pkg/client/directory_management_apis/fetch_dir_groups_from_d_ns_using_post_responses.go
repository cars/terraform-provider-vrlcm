// Code generated by go-swagger; DO NOT EDIT.

package directory_management_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// FetchDirGroupsFromDNsUsingPOSTReader is a Reader for the FetchDirGroupsFromDNsUsingPOST structure.
type FetchDirGroupsFromDNsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FetchDirGroupsFromDNsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFetchDirGroupsFromDNsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewFetchDirGroupsFromDNsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFetchDirGroupsFromDNsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFetchDirGroupsFromDNsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFetchDirGroupsFromDNsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFetchDirGroupsFromDNsUsingPOSTOK creates a FetchDirGroupsFromDNsUsingPOSTOK with default headers values
func NewFetchDirGroupsFromDNsUsingPOSTOK() *FetchDirGroupsFromDNsUsingPOSTOK {
	return &FetchDirGroupsFromDNsUsingPOSTOK{}
}

/*FetchDirGroupsFromDNsUsingPOSTOK handles this case with default header values.

OK
*/
type FetchDirGroupsFromDNsUsingPOSTOK struct {
	Payload interface{}
}

func (o *FetchDirGroupsFromDNsUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/searchgroups][%d] fetchDirGroupsFromDNsUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *FetchDirGroupsFromDNsUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *FetchDirGroupsFromDNsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchDirGroupsFromDNsUsingPOSTCreated creates a FetchDirGroupsFromDNsUsingPOSTCreated with default headers values
func NewFetchDirGroupsFromDNsUsingPOSTCreated() *FetchDirGroupsFromDNsUsingPOSTCreated {
	return &FetchDirGroupsFromDNsUsingPOSTCreated{}
}

/*FetchDirGroupsFromDNsUsingPOSTCreated handles this case with default header values.

Created
*/
type FetchDirGroupsFromDNsUsingPOSTCreated struct {
}

func (o *FetchDirGroupsFromDNsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/searchgroups][%d] fetchDirGroupsFromDNsUsingPOSTCreated ", 201)
}

func (o *FetchDirGroupsFromDNsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFetchDirGroupsFromDNsUsingPOSTUnauthorized creates a FetchDirGroupsFromDNsUsingPOSTUnauthorized with default headers values
func NewFetchDirGroupsFromDNsUsingPOSTUnauthorized() *FetchDirGroupsFromDNsUsingPOSTUnauthorized {
	return &FetchDirGroupsFromDNsUsingPOSTUnauthorized{}
}

/*FetchDirGroupsFromDNsUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type FetchDirGroupsFromDNsUsingPOSTUnauthorized struct {
}

func (o *FetchDirGroupsFromDNsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/searchgroups][%d] fetchDirGroupsFromDNsUsingPOSTUnauthorized ", 401)
}

func (o *FetchDirGroupsFromDNsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFetchDirGroupsFromDNsUsingPOSTForbidden creates a FetchDirGroupsFromDNsUsingPOSTForbidden with default headers values
func NewFetchDirGroupsFromDNsUsingPOSTForbidden() *FetchDirGroupsFromDNsUsingPOSTForbidden {
	return &FetchDirGroupsFromDNsUsingPOSTForbidden{}
}

/*FetchDirGroupsFromDNsUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type FetchDirGroupsFromDNsUsingPOSTForbidden struct {
}

func (o *FetchDirGroupsFromDNsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/searchgroups][%d] fetchDirGroupsFromDNsUsingPOSTForbidden ", 403)
}

func (o *FetchDirGroupsFromDNsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFetchDirGroupsFromDNsUsingPOSTNotFound creates a FetchDirGroupsFromDNsUsingPOSTNotFound with default headers values
func NewFetchDirGroupsFromDNsUsingPOSTNotFound() *FetchDirGroupsFromDNsUsingPOSTNotFound {
	return &FetchDirGroupsFromDNsUsingPOSTNotFound{}
}

/*FetchDirGroupsFromDNsUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type FetchDirGroupsFromDNsUsingPOSTNotFound struct {
}

func (o *FetchDirGroupsFromDNsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/searchgroups][%d] fetchDirGroupsFromDNsUsingPOSTNotFound ", 404)
}

func (o *FetchDirGroupsFromDNsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
