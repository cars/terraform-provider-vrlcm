// Code generated by go-swagger; DO NOT EDIT.

package directory_management_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllDirectoriesUsingPOSTReader is a Reader for the GetAllDirectoriesUsingPOST structure.
type GetAllDirectoriesUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllDirectoriesUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllDirectoriesUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewGetAllDirectoriesUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllDirectoriesUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllDirectoriesUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllDirectoriesUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllDirectoriesUsingPOSTOK creates a GetAllDirectoriesUsingPOSTOK with default headers values
func NewGetAllDirectoriesUsingPOSTOK() *GetAllDirectoriesUsingPOSTOK {
	return &GetAllDirectoriesUsingPOSTOK{}
}

/*GetAllDirectoriesUsingPOSTOK handles this case with default header values.

OK
*/
type GetAllDirectoriesUsingPOSTOK struct {
	Payload interface{}
}

func (o *GetAllDirectoriesUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/getall][%d] getAllDirectoriesUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GetAllDirectoriesUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllDirectoriesUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllDirectoriesUsingPOSTCreated creates a GetAllDirectoriesUsingPOSTCreated with default headers values
func NewGetAllDirectoriesUsingPOSTCreated() *GetAllDirectoriesUsingPOSTCreated {
	return &GetAllDirectoriesUsingPOSTCreated{}
}

/*GetAllDirectoriesUsingPOSTCreated handles this case with default header values.

Created
*/
type GetAllDirectoriesUsingPOSTCreated struct {
}

func (o *GetAllDirectoriesUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/getall][%d] getAllDirectoriesUsingPOSTCreated ", 201)
}

func (o *GetAllDirectoriesUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDirectoriesUsingPOSTUnauthorized creates a GetAllDirectoriesUsingPOSTUnauthorized with default headers values
func NewGetAllDirectoriesUsingPOSTUnauthorized() *GetAllDirectoriesUsingPOSTUnauthorized {
	return &GetAllDirectoriesUsingPOSTUnauthorized{}
}

/*GetAllDirectoriesUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllDirectoriesUsingPOSTUnauthorized struct {
}

func (o *GetAllDirectoriesUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/getall][%d] getAllDirectoriesUsingPOSTUnauthorized ", 401)
}

func (o *GetAllDirectoriesUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDirectoriesUsingPOSTForbidden creates a GetAllDirectoriesUsingPOSTForbidden with default headers values
func NewGetAllDirectoriesUsingPOSTForbidden() *GetAllDirectoriesUsingPOSTForbidden {
	return &GetAllDirectoriesUsingPOSTForbidden{}
}

/*GetAllDirectoriesUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type GetAllDirectoriesUsingPOSTForbidden struct {
}

func (o *GetAllDirectoriesUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/getall][%d] getAllDirectoriesUsingPOSTForbidden ", 403)
}

func (o *GetAllDirectoriesUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDirectoriesUsingPOSTNotFound creates a GetAllDirectoriesUsingPOSTNotFound with default headers values
func NewGetAllDirectoriesUsingPOSTNotFound() *GetAllDirectoriesUsingPOSTNotFound {
	return &GetAllDirectoriesUsingPOSTNotFound{}
}

/*GetAllDirectoriesUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type GetAllDirectoriesUsingPOSTNotFound struct {
}

func (o *GetAllDirectoriesUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /lcm/authzn/api/idp/dirConfigs/getall][%d] getAllDirectoriesUsingPOSTNotFound ", 404)
}

func (o *GetAllDirectoriesUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
