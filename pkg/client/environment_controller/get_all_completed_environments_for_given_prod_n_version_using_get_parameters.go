// Code generated by go-swagger; DO NOT EDIT.

package environment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams creates a new GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams object
// with the default values initialized.
func NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams() *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	var ()
	return &GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParamsWithTimeout creates a new GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParamsWithTimeout(timeout time.Duration) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	var ()
	return &GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams{

		timeout: timeout,
	}
}

// NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParamsWithContext creates a new GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParamsWithContext(ctx context.Context) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	var ()
	return &GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams{

		Context: ctx,
	}
}

// NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParamsWithHTTPClient creates a new GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParamsWithHTTPClient(client *http.Client) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	var ()
	return &GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams{
		HTTPClient: client,
	}
}

/*GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams contains all the parameters to send to the API endpoint
for the get all completed environments for given prod n version using g e t operation typically these are written to a http.Request
*/
type GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams struct {

	/*ProdID
	  prodId

	*/
	ProdID string
	/*ProdVersion
	  prodVersion

	*/
	ProdVersion string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) WithTimeout(timeout time.Duration) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) WithContext(ctx context.Context) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) WithHTTPClient(client *http.Client) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProdID adds the prodID to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) WithProdID(prodID string) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	o.SetProdID(prodID)
	return o
}

// SetProdID adds the prodId to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) SetProdID(prodID string) {
	o.ProdID = prodID
}

// WithProdVersion adds the prodVersion to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) WithProdVersion(prodVersion string) *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams {
	o.SetProdVersion(prodVersion)
	return o
}

// SetProdVersion adds the prodVersion to the get all completed environments for given prod n version using g e t params
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) SetProdVersion(prodVersion string) {
	o.ProdVersion = prodVersion
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllCompletedEnvironmentsForGivenProdNVersionUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param prodId
	if err := r.SetPathParam("prodId", o.ProdID); err != nil {
		return err
	}

	// path param prodVersion
	if err := r.SetPathParam("prodVersion", o.ProdVersion); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
