// Code generated by go-swagger; DO NOT EDIT.

package environment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetAllPendingEnvironmentRequestsUsingGETReader is a Reader for the GetAllPendingEnvironmentRequestsUsingGET structure.
type GetAllPendingEnvironmentRequestsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPendingEnvironmentRequestsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPendingEnvironmentRequestsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllPendingEnvironmentRequestsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllPendingEnvironmentRequestsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllPendingEnvironmentRequestsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllPendingEnvironmentRequestsUsingGETOK creates a GetAllPendingEnvironmentRequestsUsingGETOK with default headers values
func NewGetAllPendingEnvironmentRequestsUsingGETOK() *GetAllPendingEnvironmentRequestsUsingGETOK {
	return &GetAllPendingEnvironmentRequestsUsingGETOK{}
}

/*GetAllPendingEnvironmentRequestsUsingGETOK handles this case with default header values.

OK
*/
type GetAllPendingEnvironmentRequestsUsingGETOK struct {
	Payload []*models.CreateEnvironmentUIRequest
}

func (o *GetAllPendingEnvironmentRequestsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/pendingrequests][%d] getAllPendingEnvironmentRequestsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllPendingEnvironmentRequestsUsingGETOK) GetPayload() []*models.CreateEnvironmentUIRequest {
	return o.Payload
}

func (o *GetAllPendingEnvironmentRequestsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPendingEnvironmentRequestsUsingGETUnauthorized creates a GetAllPendingEnvironmentRequestsUsingGETUnauthorized with default headers values
func NewGetAllPendingEnvironmentRequestsUsingGETUnauthorized() *GetAllPendingEnvironmentRequestsUsingGETUnauthorized {
	return &GetAllPendingEnvironmentRequestsUsingGETUnauthorized{}
}

/*GetAllPendingEnvironmentRequestsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllPendingEnvironmentRequestsUsingGETUnauthorized struct {
}

func (o *GetAllPendingEnvironmentRequestsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/pendingrequests][%d] getAllPendingEnvironmentRequestsUsingGETUnauthorized ", 401)
}

func (o *GetAllPendingEnvironmentRequestsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllPendingEnvironmentRequestsUsingGETForbidden creates a GetAllPendingEnvironmentRequestsUsingGETForbidden with default headers values
func NewGetAllPendingEnvironmentRequestsUsingGETForbidden() *GetAllPendingEnvironmentRequestsUsingGETForbidden {
	return &GetAllPendingEnvironmentRequestsUsingGETForbidden{}
}

/*GetAllPendingEnvironmentRequestsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllPendingEnvironmentRequestsUsingGETForbidden struct {
}

func (o *GetAllPendingEnvironmentRequestsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/pendingrequests][%d] getAllPendingEnvironmentRequestsUsingGETForbidden ", 403)
}

func (o *GetAllPendingEnvironmentRequestsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllPendingEnvironmentRequestsUsingGETNotFound creates a GetAllPendingEnvironmentRequestsUsingGETNotFound with default headers values
func NewGetAllPendingEnvironmentRequestsUsingGETNotFound() *GetAllPendingEnvironmentRequestsUsingGETNotFound {
	return &GetAllPendingEnvironmentRequestsUsingGETNotFound{}
}

/*GetAllPendingEnvironmentRequestsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllPendingEnvironmentRequestsUsingGETNotFound struct {
}

func (o *GetAllPendingEnvironmentRequestsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/pendingrequests][%d] getAllPendingEnvironmentRequestsUsingGETNotFound ", 404)
}

func (o *GetAllPendingEnvironmentRequestsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
