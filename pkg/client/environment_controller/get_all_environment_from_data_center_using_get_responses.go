// Code generated by go-swagger; DO NOT EDIT.

package environment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetAllEnvironmentFromDataCenterUsingGETReader is a Reader for the GetAllEnvironmentFromDataCenterUsingGET structure.
type GetAllEnvironmentFromDataCenterUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllEnvironmentFromDataCenterUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllEnvironmentFromDataCenterUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllEnvironmentFromDataCenterUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllEnvironmentFromDataCenterUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllEnvironmentFromDataCenterUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllEnvironmentFromDataCenterUsingGETOK creates a GetAllEnvironmentFromDataCenterUsingGETOK with default headers values
func NewGetAllEnvironmentFromDataCenterUsingGETOK() *GetAllEnvironmentFromDataCenterUsingGETOK {
	return &GetAllEnvironmentFromDataCenterUsingGETOK{}
}

/*GetAllEnvironmentFromDataCenterUsingGETOK handles this case with default header values.

OK
*/
type GetAllEnvironmentFromDataCenterUsingGETOK struct {
	Payload []*models.EnvironmentRequestDTO
}

func (o *GetAllEnvironmentFromDataCenterUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/environments][%d] getAllEnvironmentFromDataCenterUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllEnvironmentFromDataCenterUsingGETOK) GetPayload() []*models.EnvironmentRequestDTO {
	return o.Payload
}

func (o *GetAllEnvironmentFromDataCenterUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllEnvironmentFromDataCenterUsingGETUnauthorized creates a GetAllEnvironmentFromDataCenterUsingGETUnauthorized with default headers values
func NewGetAllEnvironmentFromDataCenterUsingGETUnauthorized() *GetAllEnvironmentFromDataCenterUsingGETUnauthorized {
	return &GetAllEnvironmentFromDataCenterUsingGETUnauthorized{}
}

/*GetAllEnvironmentFromDataCenterUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllEnvironmentFromDataCenterUsingGETUnauthorized struct {
}

func (o *GetAllEnvironmentFromDataCenterUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/environments][%d] getAllEnvironmentFromDataCenterUsingGETUnauthorized ", 401)
}

func (o *GetAllEnvironmentFromDataCenterUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllEnvironmentFromDataCenterUsingGETForbidden creates a GetAllEnvironmentFromDataCenterUsingGETForbidden with default headers values
func NewGetAllEnvironmentFromDataCenterUsingGETForbidden() *GetAllEnvironmentFromDataCenterUsingGETForbidden {
	return &GetAllEnvironmentFromDataCenterUsingGETForbidden{}
}

/*GetAllEnvironmentFromDataCenterUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllEnvironmentFromDataCenterUsingGETForbidden struct {
}

func (o *GetAllEnvironmentFromDataCenterUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/environments][%d] getAllEnvironmentFromDataCenterUsingGETForbidden ", 403)
}

func (o *GetAllEnvironmentFromDataCenterUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllEnvironmentFromDataCenterUsingGETNotFound creates a GetAllEnvironmentFromDataCenterUsingGETNotFound with default headers values
func NewGetAllEnvironmentFromDataCenterUsingGETNotFound() *GetAllEnvironmentFromDataCenterUsingGETNotFound {
	return &GetAllEnvironmentFromDataCenterUsingGETNotFound{}
}

/*GetAllEnvironmentFromDataCenterUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllEnvironmentFromDataCenterUsingGETNotFound struct {
}

func (o *GetAllEnvironmentFromDataCenterUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/datacenters/{dataCenterName}/environments][%d] getAllEnvironmentFromDataCenterUsingGETNotFound ", 404)
}

func (o *GetAllEnvironmentFromDataCenterUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
