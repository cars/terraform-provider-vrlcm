// Code generated by go-swagger; DO NOT EDIT.

package environment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// NewEnvironmentTemplateUsingPOSTParams creates a new EnvironmentTemplateUsingPOSTParams object
// with the default values initialized.
func NewEnvironmentTemplateUsingPOSTParams() *EnvironmentTemplateUsingPOSTParams {
	var ()
	return &EnvironmentTemplateUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEnvironmentTemplateUsingPOSTParamsWithTimeout creates a new EnvironmentTemplateUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEnvironmentTemplateUsingPOSTParamsWithTimeout(timeout time.Duration) *EnvironmentTemplateUsingPOSTParams {
	var ()
	return &EnvironmentTemplateUsingPOSTParams{

		timeout: timeout,
	}
}

// NewEnvironmentTemplateUsingPOSTParamsWithContext creates a new EnvironmentTemplateUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewEnvironmentTemplateUsingPOSTParamsWithContext(ctx context.Context) *EnvironmentTemplateUsingPOSTParams {
	var ()
	return &EnvironmentTemplateUsingPOSTParams{

		Context: ctx,
	}
}

// NewEnvironmentTemplateUsingPOSTParamsWithHTTPClient creates a new EnvironmentTemplateUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEnvironmentTemplateUsingPOSTParamsWithHTTPClient(client *http.Client) *EnvironmentTemplateUsingPOSTParams {
	var ()
	return &EnvironmentTemplateUsingPOSTParams{
		HTTPClient: client,
	}
}

/*EnvironmentTemplateUsingPOSTParams contains all the parameters to send to the API endpoint
for the environment template using p o s t operation typically these are written to a http.Request
*/
type EnvironmentTemplateUsingPOSTParams struct {

	/*Request
	  request

	*/
	Request []*models.ProductNodeRequest
	/*Type
	  type

	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) WithTimeout(timeout time.Duration) *EnvironmentTemplateUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) WithContext(ctx context.Context) *EnvironmentTemplateUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) WithHTTPClient(client *http.Client) *EnvironmentTemplateUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequest adds the request to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) WithRequest(request []*models.ProductNodeRequest) *EnvironmentTemplateUsingPOSTParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) SetRequest(request []*models.ProductNodeRequest) {
	o.Request = request
}

// WithType adds the typeVar to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) WithType(typeVar string) *EnvironmentTemplateUsingPOSTParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the environment template using p o s t params
func (o *EnvironmentTemplateUsingPOSTParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *EnvironmentTemplateUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
