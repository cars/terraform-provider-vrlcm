// Code generated by go-swagger; DO NOT EDIT.

package environment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cars/terraform-provider-vrlcm/models"
)

// GetEnvironmentByNameUsingGETReader is a Reader for the GetEnvironmentByNameUsingGET structure.
type GetEnvironmentByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnvironmentByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEnvironmentByNameUsingGETOK creates a GetEnvironmentByNameUsingGETOK with default headers values
func NewGetEnvironmentByNameUsingGETOK() *GetEnvironmentByNameUsingGETOK {
	return &GetEnvironmentByNameUsingGETOK{}
}

/*GetEnvironmentByNameUsingGETOK handles this case with default header values.

OK
*/
type GetEnvironmentByNameUsingGETOK struct {
	Payload *models.EnvironmentDTO
}

func (o *GetEnvironmentByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/{environmentName}][%d] getEnvironmentByNameUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetEnvironmentByNameUsingGETOK) GetPayload() *models.EnvironmentDTO {
	return o.Payload
}

func (o *GetEnvironmentByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentByNameUsingGETUnauthorized creates a GetEnvironmentByNameUsingGETUnauthorized with default headers values
func NewGetEnvironmentByNameUsingGETUnauthorized() *GetEnvironmentByNameUsingGETUnauthorized {
	return &GetEnvironmentByNameUsingGETUnauthorized{}
}

/*GetEnvironmentByNameUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetEnvironmentByNameUsingGETUnauthorized struct {
}

func (o *GetEnvironmentByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/{environmentName}][%d] getEnvironmentByNameUsingGETUnauthorized ", 401)
}

func (o *GetEnvironmentByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentByNameUsingGETForbidden creates a GetEnvironmentByNameUsingGETForbidden with default headers values
func NewGetEnvironmentByNameUsingGETForbidden() *GetEnvironmentByNameUsingGETForbidden {
	return &GetEnvironmentByNameUsingGETForbidden{}
}

/*GetEnvironmentByNameUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetEnvironmentByNameUsingGETForbidden struct {
}

func (o *GetEnvironmentByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/{environmentName}][%d] getEnvironmentByNameUsingGETForbidden ", 403)
}

func (o *GetEnvironmentByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentByNameUsingGETNotFound creates a GetEnvironmentByNameUsingGETNotFound with default headers values
func NewGetEnvironmentByNameUsingGETNotFound() *GetEnvironmentByNameUsingGETNotFound {
	return &GetEnvironmentByNameUsingGETNotFound{}
}

/*GetEnvironmentByNameUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetEnvironmentByNameUsingGETNotFound struct {
}

func (o *GetEnvironmentByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/lcops/api/environments/{environmentName}][%d] getEnvironmentByNameUsingGETNotFound ", 404)
}

func (o *GetEnvironmentByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
