// Code generated by go-swagger; DO NOT EDIT.

package authentication_role_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllUsersForGiveRoleIDUsingGETReader is a Reader for the GetAllUsersForGiveRoleIDUsingGET structure.
type GetAllUsersForGiveRoleIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUsersForGiveRoleIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUsersForGiveRoleIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUsersForGiveRoleIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllUsersForGiveRoleIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUsersForGiveRoleIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllUsersForGiveRoleIDUsingGETOK creates a GetAllUsersForGiveRoleIDUsingGETOK with default headers values
func NewGetAllUsersForGiveRoleIDUsingGETOK() *GetAllUsersForGiveRoleIDUsingGETOK {
	return &GetAllUsersForGiveRoleIDUsingGETOK{}
}

/*GetAllUsersForGiveRoleIDUsingGETOK handles this case with default header values.

OK
*/
type GetAllUsersForGiveRoleIDUsingGETOK struct {
	Payload interface{}
}

func (o *GetAllUsersForGiveRoleIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/{vmid}/mappedusers][%d] getAllUsersForGiveRoleIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllUsersForGiveRoleIDUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllUsersForGiveRoleIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsersForGiveRoleIDUsingGETUnauthorized creates a GetAllUsersForGiveRoleIDUsingGETUnauthorized with default headers values
func NewGetAllUsersForGiveRoleIDUsingGETUnauthorized() *GetAllUsersForGiveRoleIDUsingGETUnauthorized {
	return &GetAllUsersForGiveRoleIDUsingGETUnauthorized{}
}

/*GetAllUsersForGiveRoleIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllUsersForGiveRoleIDUsingGETUnauthorized struct {
}

func (o *GetAllUsersForGiveRoleIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/{vmid}/mappedusers][%d] getAllUsersForGiveRoleIdUsingGETUnauthorized ", 401)
}

func (o *GetAllUsersForGiveRoleIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsersForGiveRoleIDUsingGETForbidden creates a GetAllUsersForGiveRoleIDUsingGETForbidden with default headers values
func NewGetAllUsersForGiveRoleIDUsingGETForbidden() *GetAllUsersForGiveRoleIDUsingGETForbidden {
	return &GetAllUsersForGiveRoleIDUsingGETForbidden{}
}

/*GetAllUsersForGiveRoleIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllUsersForGiveRoleIDUsingGETForbidden struct {
}

func (o *GetAllUsersForGiveRoleIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/{vmid}/mappedusers][%d] getAllUsersForGiveRoleIdUsingGETForbidden ", 403)
}

func (o *GetAllUsersForGiveRoleIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsersForGiveRoleIDUsingGETNotFound creates a GetAllUsersForGiveRoleIDUsingGETNotFound with default headers values
func NewGetAllUsersForGiveRoleIDUsingGETNotFound() *GetAllUsersForGiveRoleIDUsingGETNotFound {
	return &GetAllUsersForGiveRoleIDUsingGETNotFound{}
}

/*GetAllUsersForGiveRoleIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllUsersForGiveRoleIDUsingGETNotFound struct {
}

func (o *GetAllUsersForGiveRoleIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/{vmid}/mappedusers][%d] getAllUsersForGiveRoleIdUsingGETNotFound ", 404)
}

func (o *GetAllUsersForGiveRoleIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
