// Code generated by go-swagger; DO NOT EDIT.

package authentication_role_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRoleByIDUsingPUTReader is a Reader for the UpdateRoleByIDUsingPUT structure.
type UpdateRoleByIDUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoleByIDUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRoleByIDUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateRoleByIDUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRoleByIDUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRoleByIDUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRoleByIDUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRoleByIDUsingPUTOK creates a UpdateRoleByIDUsingPUTOK with default headers values
func NewUpdateRoleByIDUsingPUTOK() *UpdateRoleByIDUsingPUTOK {
	return &UpdateRoleByIDUsingPUTOK{}
}

/*UpdateRoleByIDUsingPUTOK handles this case with default header values.

OK
*/
type UpdateRoleByIDUsingPUTOK struct {
	Payload interface{}
}

func (o *UpdateRoleByIDUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateRoleByIDUsingPUTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRoleByIDUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleByIDUsingPUTCreated creates a UpdateRoleByIDUsingPUTCreated with default headers values
func NewUpdateRoleByIDUsingPUTCreated() *UpdateRoleByIDUsingPUTCreated {
	return &UpdateRoleByIDUsingPUTCreated{}
}

/*UpdateRoleByIDUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateRoleByIDUsingPUTCreated struct {
}

func (o *UpdateRoleByIDUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPUTCreated ", 201)
}

func (o *UpdateRoleByIDUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleByIDUsingPUTUnauthorized creates a UpdateRoleByIDUsingPUTUnauthorized with default headers values
func NewUpdateRoleByIDUsingPUTUnauthorized() *UpdateRoleByIDUsingPUTUnauthorized {
	return &UpdateRoleByIDUsingPUTUnauthorized{}
}

/*UpdateRoleByIDUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateRoleByIDUsingPUTUnauthorized struct {
}

func (o *UpdateRoleByIDUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPUTUnauthorized ", 401)
}

func (o *UpdateRoleByIDUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleByIDUsingPUTForbidden creates a UpdateRoleByIDUsingPUTForbidden with default headers values
func NewUpdateRoleByIDUsingPUTForbidden() *UpdateRoleByIDUsingPUTForbidden {
	return &UpdateRoleByIDUsingPUTForbidden{}
}

/*UpdateRoleByIDUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateRoleByIDUsingPUTForbidden struct {
}

func (o *UpdateRoleByIDUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPUTForbidden ", 403)
}

func (o *UpdateRoleByIDUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleByIDUsingPUTNotFound creates a UpdateRoleByIDUsingPUTNotFound with default headers values
func NewUpdateRoleByIDUsingPUTNotFound() *UpdateRoleByIDUsingPUTNotFound {
	return &UpdateRoleByIDUsingPUTNotFound{}
}

/*UpdateRoleByIDUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateRoleByIDUsingPUTNotFound struct {
}

func (o *UpdateRoleByIDUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPUTNotFound ", 404)
}

func (o *UpdateRoleByIDUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
