// Code generated by go-swagger; DO NOT EDIT.

package authentication_role_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRoleByIDUsingPATCHReader is a Reader for the UpdateRoleByIDUsingPATCH structure.
type UpdateRoleByIDUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoleByIDUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRoleByIDUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateRoleByIDUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRoleByIDUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRoleByIDUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRoleByIDUsingPATCHOK creates a UpdateRoleByIDUsingPATCHOK with default headers values
func NewUpdateRoleByIDUsingPATCHOK() *UpdateRoleByIDUsingPATCHOK {
	return &UpdateRoleByIDUsingPATCHOK{}
}

/*UpdateRoleByIDUsingPATCHOK handles this case with default header values.

OK
*/
type UpdateRoleByIDUsingPATCHOK struct {
	Payload interface{}
}

func (o *UpdateRoleByIDUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *UpdateRoleByIDUsingPATCHOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRoleByIDUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleByIDUsingPATCHNoContent creates a UpdateRoleByIDUsingPATCHNoContent with default headers values
func NewUpdateRoleByIDUsingPATCHNoContent() *UpdateRoleByIDUsingPATCHNoContent {
	return &UpdateRoleByIDUsingPATCHNoContent{}
}

/*UpdateRoleByIDUsingPATCHNoContent handles this case with default header values.

No Content
*/
type UpdateRoleByIDUsingPATCHNoContent struct {
}

func (o *UpdateRoleByIDUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPATCHNoContent ", 204)
}

func (o *UpdateRoleByIDUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleByIDUsingPATCHUnauthorized creates a UpdateRoleByIDUsingPATCHUnauthorized with default headers values
func NewUpdateRoleByIDUsingPATCHUnauthorized() *UpdateRoleByIDUsingPATCHUnauthorized {
	return &UpdateRoleByIDUsingPATCHUnauthorized{}
}

/*UpdateRoleByIDUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateRoleByIDUsingPATCHUnauthorized struct {
}

func (o *UpdateRoleByIDUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPATCHUnauthorized ", 401)
}

func (o *UpdateRoleByIDUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleByIDUsingPATCHForbidden creates a UpdateRoleByIDUsingPATCHForbidden with default headers values
func NewUpdateRoleByIDUsingPATCHForbidden() *UpdateRoleByIDUsingPATCHForbidden {
	return &UpdateRoleByIDUsingPATCHForbidden{}
}

/*UpdateRoleByIDUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type UpdateRoleByIDUsingPATCHForbidden struct {
}

func (o *UpdateRoleByIDUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /lcm/authzn/api/roles/{vmid}][%d] updateRoleByIdUsingPATCHForbidden ", 403)
}

func (o *UpdateRoleByIDUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
