// Code generated by go-swagger; DO NOT EDIT.

package authentication_role_a_p_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllRolesExtendedUsingGETReader is a Reader for the GetAllRolesExtendedUsingGET structure.
type GetAllRolesExtendedUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllRolesExtendedUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllRolesExtendedUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllRolesExtendedUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllRolesExtendedUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllRolesExtendedUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllRolesExtendedUsingGETOK creates a GetAllRolesExtendedUsingGETOK with default headers values
func NewGetAllRolesExtendedUsingGETOK() *GetAllRolesExtendedUsingGETOK {
	return &GetAllRolesExtendedUsingGETOK{}
}

/*GetAllRolesExtendedUsingGETOK handles this case with default header values.

OK
*/
type GetAllRolesExtendedUsingGETOK struct {
	Payload interface{}
}

func (o *GetAllRolesExtendedUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/extended][%d] getAllRolesExtendedUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllRolesExtendedUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAllRolesExtendedUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRolesExtendedUsingGETUnauthorized creates a GetAllRolesExtendedUsingGETUnauthorized with default headers values
func NewGetAllRolesExtendedUsingGETUnauthorized() *GetAllRolesExtendedUsingGETUnauthorized {
	return &GetAllRolesExtendedUsingGETUnauthorized{}
}

/*GetAllRolesExtendedUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllRolesExtendedUsingGETUnauthorized struct {
}

func (o *GetAllRolesExtendedUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/extended][%d] getAllRolesExtendedUsingGETUnauthorized ", 401)
}

func (o *GetAllRolesExtendedUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllRolesExtendedUsingGETForbidden creates a GetAllRolesExtendedUsingGETForbidden with default headers values
func NewGetAllRolesExtendedUsingGETForbidden() *GetAllRolesExtendedUsingGETForbidden {
	return &GetAllRolesExtendedUsingGETForbidden{}
}

/*GetAllRolesExtendedUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllRolesExtendedUsingGETForbidden struct {
}

func (o *GetAllRolesExtendedUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/extended][%d] getAllRolesExtendedUsingGETForbidden ", 403)
}

func (o *GetAllRolesExtendedUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllRolesExtendedUsingGETNotFound creates a GetAllRolesExtendedUsingGETNotFound with default headers values
func NewGetAllRolesExtendedUsingGETNotFound() *GetAllRolesExtendedUsingGETNotFound {
	return &GetAllRolesExtendedUsingGETNotFound{}
}

/*GetAllRolesExtendedUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllRolesExtendedUsingGETNotFound struct {
}

func (o *GetAllRolesExtendedUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /lcm/authzn/api/roles/extended][%d] getAllRolesExtendedUsingGETNotFound ", 404)
}

func (o *GetAllRolesExtendedUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
